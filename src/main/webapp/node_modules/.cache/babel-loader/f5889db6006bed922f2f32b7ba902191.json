{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/client/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/client/Index.vue","mtime":1579413305752},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pageMixins from '@/mixins/page';\nimport ClientEdit from \"./Edit\";\nexport default {\n  name: 'ClientManage',\n  mixins: [pageMixins],\n  components: {\n    ClientEdit: ClientEdit\n  },\n  filters: {\n    approveFilter: function approveFilter(status) {\n      var map = {\n        1: 'success',\n        0: 'danger'\n      };\n      return map[status];\n    }\n  },\n  data: function data() {\n    return {\n      dialog: {\n        isVisible: false,\n        title: '',\n        type: ''\n      },\n      tableKey: 0,\n      loading: false,\n      list: null,\n      total: 0,\n      selection: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.init();\n    });\n  },\n  methods: {\n    init: function init() {\n      this.page.current = 1;\n      this.findPage();\n    },\n    findPageInit: function findPageInit() {\n      this.pageUrl = 'auth/client/page';\n      return true;\n    },\n    transApprove: function transApprove(v) {\n      switch (v) {\n        case 0:\n          return 'false';\n\n        case 1:\n          return 'true';\n\n        default:\n          return '';\n      }\n    },\n    editSuccess: function editSuccess() {\n      this.search();\n    },\n    editClose: function editClose() {\n      this.dialog.isVisible = false;\n    },\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    add: function add() {\n      this.dialog.title = this.$t('common.add');\n      this.dialog.isVisible = true;\n      this.dialog.type = 'add';\n    },\n    edit: function edit(row) {\n      this.$refs.edit.setClient(row);\n      this.dialog.title = this.$t('common.edit');\n      this.dialog.isVisible = true;\n      this.dialog.type = 'edit';\n    },\n    unlock: function unlock(row) {\n      var _this2 = this;\n\n      this.$get(\"auth/client/secret/\".concat(row.clientId)).then(function (r) {\n        _this2.$message({\n          showClose: true,\n          message: _this2.$t('tips.clientOriginSecret') + r.data.data,\n          duration: 0,\n          type: 'success'\n        });\n      });\n    },\n    batchDelete: function batchDelete() {\n      var _this3 = this;\n\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        var clientIds = [];\n\n        _this3.selection.forEach(function (c) {\n          clientIds.push(c.clientId);\n        });\n\n        _this3.delete(clientIds);\n      }).catch(function () {\n        _this3.clearSelections();\n      });\n    },\n    singleDelete: function singleDelete(row) {\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    delete: function _delete(clientIds) {\n      var _this4 = this;\n\n      this.loading = true;\n      this.$delete(\"auth/client\", {\n        clientIds: clientIds\n      }).then(function () {\n        _this4.$message({\n          message: _this4.$t('tips.deleteSuccess'),\n          type: 'success'\n        });\n\n        _this4.search();\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    search: function search() {},\n    reset: function reset() {\n      this.search();\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <div class=\"filter-container\">\n            <el-input v-model=\"page.entity.clientId\" placeholder=\"clientId\" class=\"filter-item search-item\"/>\n            <el-button class=\"filter-item\" type=\"primary\" plain @click=\"search\">\n                {{ $t('table.search') }}\n            </el-button>\n            <el-button class=\"filter-item\" type=\"warning\" plain @click=\"reset\">\n                {{ $t('table.reset') }}\n            </el-button>\n            <el-dropdown v-has-any-permission=\"['client:add','client:delete']\" trigger=\"click\" class=\"filter-item\">\n                <el-button>\n                    {{ $t('table.more') }}<i class=\"el-icon-arrow-down el-icon--right\"/>\n                </el-button>\n                <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item v-has-permission=\"['client:add']\" @click.native=\"add\">{{ $t('table.add') }}</el-dropdown-item>\n                    <el-dropdown-item v-has-permission=\"['client:delete']\" @click.native=\"batchDelete\">{{ $t('table.delete') }}</el-dropdown-item>\n                </el-dropdown-menu>\n            </el-dropdown>\n        </div>\n        <el-table\n                ref=\"table\"\n                :key=\"tableKey\"\n                v-loading=\"pageLoading\"\n                :data=\"page.records\"\n                border\n                fit\n                style=\"width: 100%;\"\n                :highlight-current-row=\"true\"\n                @selection-change=\"onSelectChange\">\n            <el-table-column type=\"selection\" align=\"center\" width=\"40px\"/>\n            <el-table-column label=\"clientId\" prop=\"clientId\" :show-overflow-tooltip=\"true\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.clientId }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"clientSecret\" prop=\"clientSecret\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"100px\">\n                <template>\n                    <span>******</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"scope\" prop=\"scope\" :show-overflow-tooltip=\"true\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.scope }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"authorizedGrantTypes\" prop=\"authorizedGrantTypes\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"170px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.authorizedGrantTypes }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"accessTokenValidity\" prop=\"accessTokenValidity\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"160px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.accessTokenValidity }} s</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"refreshTokenValidity\" prop=\"refreshTokenValidity\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"160px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ (scope.row.refreshTokenValidity) ? (scope.row.refreshTokenValidity + 's') : '' }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"webServerRedirectUri\" prop=\"webServerRedirectUri\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"180px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.webServerRedirectUri }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"autoapprove\" prop=\"autoapprove\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"140px\">\n                <template slot-scope=\"{row}\">\n                    <el-tag v-if=\"row.autoapprove !== null\" :type=\"row.autoapprove | approveFilter\">\n                        {{ transApprove(row.autoapprove) }}\n                    </el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('table.operation')\" align=\"center\" min-width=\"150px\" class-name=\"small-padding fixed-width\" fixed=\"right\">\n                <template slot-scope=\"{row}\">\n                    <i v-hasPermission=\"['client:decrypt']\" class=\"el-icon-unlock table-operation\" style=\"color: #87d068;\" @click=\"unlock(row)\"/>\n                    <i v-hasPermission=\"['client:update']\" class=\"el-icon-setting table-operation\" style=\"color: #2db7f5;\" @click=\"edit(row)\"/>\n                    <i v-hasPermission=\"['client:delete']\" class=\"el-icon-delete table-operation\" style=\"color: #f50;\" @click=\"singleDelete(row)\"/>\n                    <el-link v-has-no-permission=\"['client:decrypt','client:update','client:delete']\" class=\"no-perm\">\n                        {{ $t('tips.noPermission') }}\n                    </el-link>\n                </template>\n            </el-table-column>\n        </el-table>\n        <el-pagination\n                :total=\"page.total\"\n                :current-page=\"page.current\"\n                style=\"margin-top: 8px;\"\n                layout=\"total, prev, pager, next, sizes\"\n                @size-change=\"sizeChange\"\n                @current-change=\"pageChange\"/>\n        <client-edit\n                ref=\"edit\"\n                :dialog-visible=\"dialog.isVisible\"\n                :title=\"dialog.title\"\n                :type=\"dialog.type\"\n                @close=\"editClose\"\n                @success=\"editSuccess\"/>\n    </div>\n</template>\n<script>\n    import pageMixins from '@/mixins/page'\n    import ClientEdit from './Edit'\n\n    export default {\n        name: 'ClientManage',\n        mixins: [pageMixins],\n        components: {ClientEdit},\n        filters: {\n            approveFilter(status) {\n                const map = {\n                    1: 'success',\n                    0: 'danger'\n                };\n                return map[status]\n            }\n        },\n        data() {\n            return {\n                dialog: {\n                    isVisible: false,\n                    title: '',\n                    type: ''\n                },\n                tableKey: 0,\n                loading: false,\n                list: null,\n                total: 0,\n                selection: []\n            }\n        },\n        created() {\n            this.$nextTick(() => {\n                this.init()\n            })\n        },\n        methods: {\n            init() {\n                this.page.current = 1;\n                this.findPage();\n            },\n            findPageInit() {\n                this.pageUrl = 'auth/client/page';\n                return true\n            },\n            transApprove(v) {\n                switch (v) {\n                    case 0:\n                        return 'false';\n                    case 1:\n                        return 'true';\n                    default:\n                        return ''\n                }\n            },\n            editSuccess() {\n                this.search()\n            },\n            editClose() {\n                this.dialog.isVisible = false\n            },\n            onSelectChange(selection) {\n                this.selection = selection\n            },\n            add() {\n                this.dialog.title = this.$t('common.add');\n                this.dialog.isVisible = true;\n                this.dialog.type = 'add'\n            },\n            edit(row) {\n                this.$refs.edit.setClient(row);\n                this.dialog.title = this.$t('common.edit');\n                this.dialog.isVisible = true;\n                this.dialog.type = 'edit'\n            },\n            unlock(row) {\n                this.$get(`auth/client/secret/${row.clientId}`).then((r) => {\n                    this.$message({\n                        showClose: true,\n                        message: this.$t('tips.clientOriginSecret') + r.data.data,\n                        duration: 0,\n                        type: 'success'\n                    })\n                })\n            },\n            batchDelete() {\n                if (!this.selection.length) {\n                    this.$message({\n                        message: this.$t('tips.noDataSelected'),\n                        type: 'warning'\n                    });\n                    return\n                }\n                this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n                    confirmButtonText: this.$t('common.confirm'),\n                    cancelButtonText: this.$t('common.cancel'),\n                    type: 'warning'\n                }).then(() => {\n                    const clientIds = [];\n                    this.selection.forEach((c) => {\n                        clientIds.push(c.clientId)\n                    });\n                    this.delete(clientIds)\n                }).catch(() => {\n                    this.clearSelections()\n                })\n            },\n            singleDelete(row) {\n                this.$refs.table.toggleRowSelection(row, true);\n                this.batchDelete()\n            },\n            delete(clientIds) {\n                this.loading = true;\n                this.$delete(`auth/client`, {clientIds}).then(() => {\n                    this.$message({\n                        message: this.$t('tips.deleteSuccess'),\n                        type: 'success'\n                    });\n                    this.search()\n                })\n            },\n            clearSelections() {\n                this.$refs.table.clearSelection()\n            },\n            search() {\n\n            },\n            reset() {\n                this.search()\n            }\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n</style>\n"],"sourceRoot":"src/views/model/system/client"}]}