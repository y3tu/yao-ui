{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/menu/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/menu/Index.vue","mtime":1579224696914},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Icons from \"./Icons\";\nimport Treeselect from '@riophae/vue-treeselect';\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css';\nexport default {\n  name: 'resourceManage',\n  components: {\n    Icons: Icons,\n    Treeselect: Treeselect\n  },\n  data: function data() {\n    return {\n      iconVisible: false,\n      buttonLoading: false,\n      selection: [],\n      resourceTree: [],\n      resourceName: '',\n      resource: this.initResource(),\n      treeProps: {\n        label: 'name',\n        children: 'children'\n      },\n      treeSelectNormalizer: function treeSelectNormalizer(node) {\n        if (node.children == null || node.children.length < 1) {\n          delete node.children;\n        }\n\n        return {\n          label: node.name\n        };\n      },\n      rules: {\n        resourceName: [{\n          required: true,\n          message: this.$t('rules.require'),\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: this.$t('rules.range2to10'),\n          trigger: 'blur'\n        }],\n        path: {\n          max: 100,\n          message: this.$t('rules.noMoreThan100'),\n          trigger: 'blur'\n        },\n        component: {\n          max: 100,\n          message: this.$t('rules.noMoreThan100'),\n          trigger: 'blur'\n        },\n        permission: {\n          max: 50,\n          message: this.$t('rules.noMoreThan50'),\n          trigger: 'blur'\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.initResourceTree();\n  },\n  methods: {\n    initResourceTree: function initResourceTree() {\n      var _this = this;\n\n      this.$get('upms/resource/getResourceTree').then(function (r) {\n        _this.resourceTree = r.data;\n      });\n    },\n    initResource: function initResource() {\n      return {\n        resourceId: '',\n        resourceName: '',\n        parentId: null,\n        path: '',\n        component: '',\n        permission: '',\n        type: 0,\n        orderNum: 0,\n        icon: ''\n      };\n    },\n    exportExcel: function exportExcel() {\n      this.$download('upms/resource/excel', {\n        resourceName: this.resourceName\n      }, \"resource_\".concat(new Date().getTime(), \".xlsx\"));\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n    nodeClick: function nodeClick(data, node, v) {\n      this.resource.parentId = data.parentId;\n\n      if (this.resource.parentId === '-1') {\n        this.resource.parentId = null;\n      }\n\n      data = data.data;\n      this.resource.orderNum = data.orderNum;\n      this.resource.type = data.type;\n      this.resource.permission = data.permission;\n      this.resource.path = data.path;\n      this.resource.component = data.component;\n      this.resource.icon = data.icon;\n      this.resource.resourceName = data.resourceName;\n      this.resource.resourceId = data.resourceId;\n      this.$refs.form.clearValidate();\n    },\n    handleNumChange: function handleNumChange(val) {\n      this.resource.orderNum = val;\n    },\n    chooseIcons: function chooseIcons() {\n      this.iconVisible = true;\n    },\n    chooseIcon: function chooseIcon(icon) {\n      this.resource.icon = icon;\n      this.iconVisible = false;\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this2.buttonLoading = true;\n          _this2.resource.createTime = _this2.resource.modifyTime = null;\n\n          if (_this2.resource.resourceId) {\n            _this2.$put('upms/resource/update', _objectSpread({}, _this2.resource)).then(function () {\n              _this2.buttonLoading = false;\n\n              _this2.$message({\n                message: _this2.$t('tips.updateSuccess'),\n                type: 'success'\n              });\n\n              _this2.reset();\n            }).catch(function () {\n              _this2.buttonLoading = false;\n            });\n          } else {\n            _this2.$post('upms/resource/create', _objectSpread({}, _this2.resource)).then(function () {\n              _this2.buttonLoading = false;\n\n              _this2.$message({\n                message: _this2.$t('tips.createSuccess'),\n                type: 'success'\n              });\n\n              _this2.reset();\n            }).catch(function () {\n              _this2.buttonLoading = false;\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    reset: function reset() {\n      this.initResourceTree();\n      this.resourceName = '';\n      this.resetForm();\n    },\n    search: function search() {\n      this.$refs.resourceTree.filter(this.resourceName);\n    },\n    add: function add() {\n      this.resetForm();\n    },\n    deleteResource: function deleteResource() {\n      var _this3 = this;\n\n      var checked = this.$refs.resourceTree.getCheckedKeys();\n\n      if (checked.length === 0) {\n        this.$message({\n          message: this.$t('tips.noNodeSelected'),\n          type: 'warning'\n        });\n      } else {\n        this.$confirm(this.$t('tips.confirmDeleteNode'), this.$t('common.tips'), {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        }).then(function () {\n          _this3.resource.resourceIds = checked.join(',');\n\n          _this3.$delete(\"upms/resource/delete/\".concat(_this3.resource.resourceIds)).then(function () {\n            _this3.$message({\n              message: _this3.$t('tips.deleteSuccess'),\n              type: 'success'\n            });\n\n            _this3.reset();\n          });\n        }).catch(function () {\n          _this3.$refs.resourceTree.setCheckedKeys([]);\n        });\n      }\n    },\n    resetForm: function resetForm() {\n      this.$refs.form.clearValidate();\n      this.$refs.form.resetFields();\n      this.resource = this.initResource();\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,OAAA,KAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,iDAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA,KAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA,KAAA,YAAA,EANA;AAOA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAPA;AAWA,MAAA,oBAXA,gCAWA,IAXA,EAWA;AACA,YAAA,IAAA,CAAA,QAAA,IAAA,IAAA,IAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,iBAAA,IAAA,CAAA,QAAA;AACA;;AACA,eAAA;AACA,UAAA,KAAA,EAAA,IAAA,CAAA;AADA,SAAA;AAGA,OAlBA;AAmBA,MAAA,KAAA,EAAA;AACA,QAAA,YAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,eAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,kBAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CADA;AAKA,QAAA,IAAA,EAAA;AAAA,UAAA,GAAA,EAAA,GAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,qBAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SALA;AAMA,QAAA,SAAA,EAAA;AAAA,UAAA,GAAA,EAAA,GAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,qBAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SANA;AAOA,QAAA,UAAA,EAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,oBAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA;AAPA;AAnBA,KAAA;AA6BA,GAjCA;AAkCA,EAAA,OAlCA,qBAkCA;AACA,SAAA,gBAAA;AACA,GApCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,WAAA,IAAA,CAAA,+BAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,CAAA,CAAA,IAAA;AACA,OAFA;AAGA,KALA;AAMA,IAAA,YANA,0BAMA;AACA,aAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,IAAA,EAAA,EAJA;AAKA,QAAA,SAAA,EAAA,EALA;AAMA,QAAA,UAAA,EAAA,EANA;AAOA,QAAA,IAAA,EAAA,CAPA;AAQA,QAAA,QAAA,EAAA,CARA;AASA,QAAA,IAAA,EAAA;AATA,OAAA;AAWA,KAlBA;AAmBA,IAAA,WAnBA,yBAmBA;AACA,WAAA,SAAA,CAAA,qBAAA,EAAA;AACA,QAAA,YAAA,EAAA,KAAA;AADA,OAAA,qBAEA,IAAA,IAAA,GAAA,OAAA,EAFA;AAGA,KAvBA;AAwBA,IAAA,UAxBA,sBAwBA,KAxBA,EAwBA,IAxBA,EAwBA;AACA,UAAA,CAAA,KAAA,EAAA,OAAA,IAAA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CAAA;AACA,KA3BA;AA4BA,IAAA,SA5BA,qBA4BA,IA5BA,EA4BA,IA5BA,EA4BA,CA5BA,EA4BA;AACA,WAAA,QAAA,CAAA,QAAA,GAAA,IAAA,CAAA,QAAA;;AACA,UAAA,KAAA,QAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,aAAA,QAAA,CAAA,QAAA,GAAA,IAAA;AACA;;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,WAAA,QAAA,CAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AACA,WAAA,QAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,WAAA,QAAA,CAAA,UAAA,GAAA,IAAA,CAAA,UAAA;AACA,WAAA,QAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA,WAAA,QAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,WAAA,QAAA,CAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AACA,WAAA,QAAA,CAAA,UAAA,GAAA,IAAA,CAAA,UAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,aAAA;AACA,KA3CA;AA4CA,IAAA,eA5CA,2BA4CA,GA5CA,EA4CA;AACA,WAAA,QAAA,CAAA,QAAA,GAAA,GAAA;AACA,KA9CA;AA+CA,IAAA,WA/CA,yBA+CA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,KAjDA;AAkDA,IAAA,UAlDA,sBAkDA,IAlDA,EAkDA;AACA,WAAA,QAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KArDA;AAsDA,IAAA,MAtDA,oBAsDA;AAAA;;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,UAAA,GAAA,MAAA,CAAA,QAAA,CAAA,UAAA,GAAA,IAAA;;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,oBAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,YAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,QAAA,CAAA;AACA,gBAAA,OAAA,EAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,CADA;AAEA,gBAAA,IAAA,EAAA;AAFA,eAAA;;AAIA,cAAA,MAAA,CAAA,KAAA;AACA,aAPA,EAOA,KAPA,CAOA,YAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA,aATA;AAUA,WAXA,MAWA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,sBAAA,oBAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,YAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AACA,cAAA,MAAA,CAAA,QAAA,CAAA;AACA,gBAAA,OAAA,EAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,CADA;AAEA,gBAAA,IAAA,EAAA;AAFA,eAAA;;AAIA,cAAA,MAAA,CAAA,KAAA;AACA,aAPA,EAOA,KAPA,CAOA,YAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA,aATA;AAUA;AACA,SA1BA,MA0BA;AACA,iBAAA,KAAA;AACA;AACA,OA9BA;AA+BA,KAtFA;AAuFA,IAAA,KAvFA,mBAuFA;AACA,WAAA,gBAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,SAAA;AACA,KA3FA;AA4FA,IAAA,MA5FA,oBA4FA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,YAAA;AACA,KA9FA;AA+FA,IAAA,GA/FA,iBA+FA;AACA,WAAA,SAAA;AACA,KAjGA;AAkGA,IAAA,cAlGA,4BAkGA;AAAA;;AACA,UAAA,OAAA,GAAA,KAAA,KAAA,CAAA,YAAA,CAAA,cAAA,EAAA;;AACA,UAAA,OAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,qBAAA,CADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AAIA,OALA,MAKA;AACA,aAAA,QAAA,CAAA,KAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,aAAA,CAAA,EAAA;AACA,UAAA,iBAAA,EAAA,KAAA,EAAA,CAAA,gBAAA,CADA;AAEA,UAAA,gBAAA,EAAA,KAAA,EAAA,CAAA,eAAA,CAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA,EAIA,IAJA,CAIA,YAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,WAAA,GAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;;AACA,UAAA,MAAA,CAAA,OAAA,gCAAA,MAAA,CAAA,QAAA,CAAA,WAAA,GAAA,IAAA,CAAA,YAAA;AACA,YAAA,MAAA,CAAA,QAAA,CAAA;AACA,cAAA,OAAA,EAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,CADA;AAEA,cAAA,IAAA,EAAA;AAFA,aAAA;;AAIA,YAAA,MAAA,CAAA,KAAA;AACA,WANA;AAOA,SAbA,EAaA,KAbA,CAaA,YAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,YAAA,CAAA,cAAA,CAAA,EAAA;AACA,SAfA;AAgBA;AACA,KA3HA;AA4HA,IAAA,SA5HA,uBA4HA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,aAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,WAAA;AACA,WAAA,QAAA,GAAA,KAAA,YAAA,EAAA;AACA;AAhIA;AArCA,CAAA","sourcesContent":["<template>\n    <div class=\"resource\">\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"app-container\">\n                    <div class=\"filter-container\">\n                        <el-input v-model=\"resourceName\" :placeholder=\"$t('table.resource.resourceName')\" class=\"filter-item search-item\"/>\n                        <el-button class=\"filter-item\" type=\"primary\" plain @click=\"search\">\n                            {{ $t('table.search') }}\n                        </el-button>\n                        <el-button class=\"filter-item\" type=\"warning\" plain @click=\"reset\">\n                            {{ $t('table.reset') }}\n                        </el-button>\n                        <el-dropdown v-has-any-permission=\"['resource:create','resource:delete','resource:export']\" trigger=\"click\" class=\"filter-item\">\n                            <el-button>\n                                {{ $t('table.more') }}<i class=\"el-icon-arrow-down el-icon--right\"/>\n                            </el-button>\n                            <el-dropdown-menu slot=\"dropdown\">\n                                <el-dropdown-item  v-has-permission=\"['resource:create']\" @click.native=\"add\">{{ $t('table.add') }}</el-dropdown-item>\n                                <el-dropdown-item  v-has-permission=\"['resource:delete']\" @click.native=\"deleteResource\">{{ $t('table.delete') }}</el-dropdown-item>\n                                <el-dropdown-item  v-has-permission=\"['resource:export']\" @click.native=\"exportExcel\">{{ $t('table.export') }}</el-dropdown-item>\n                            </el-dropdown-menu>\n                        </el-dropdown>\n                    </div>\n                    <el-tree\n                            ref=\"resourceTree\"\n                            :props=\"treeProps\"\n                            :data=\"resourceTree\"\n                            :check-strictly=\"true\"\n                            show-checkbox\n                            accordion\n                            node-key=\"id\"\n                            highlight-current\n                            :filter-node-method=\"filterNode\"\n                            @node-click=\"nodeClick\"/>\n                </div>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n                <el-card class=\"box-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                        <span>{{ resource.resourceId === '' ? this.$t('common.add') : this.$t('common.edit') }}</span>\n                    </div>\n                    <div>\n                        <el-form ref=\"form\" :model=\"resource\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\">\n                            <el-form-item :label=\"$t('table.resource.parentId')\" prop=\"parentId\">\n                                <treeselect\n                                        v-model=\"resource.parentId\"\n                                        :normalizer=\"treeSelectNormalizer\"\n                                        :multiple=\"false\"\n                                        :options=\"resourceTree\"\n                                        :clear-value-text=\"$t('common.clear')\"\n                                        placeholder=\" \"\n                                        style=\"width:100%\"/>\n                            </el-form-item>\n                            <el-form-item :label=\"$t('table.resource.resourceName')\" prop=\"resourceName\">\n                                <el-input v-model=\"resource.resourceName\"/>\n                            </el-form-item>\n                            <el-form-item :label=\"$t('table.resource.type')\" prop=\"type\">\n                                <el-radio-group v-model=\"resource.type\" :disabled=\"resource.resourceId !== ''\">\n                                    <el-radio :label=\"0\">{{ $t('common.resource.menu') }}</el-radio>\n                                    <el-radio :label=\"1\">{{ $t('common.resource.button') }}</el-radio>\n                                </el-radio-group>\n                            </el-form-item>\n                            <el-form-item v-show=\"resource.type === 0\" :label=\"$t('table.resource.icon')\" prop=\"icon\">\n                                <el-input v-model=\"resource.icon\">\n                                    <el-button slot=\"append\" icon=\"el-icon-brush\" style=\"padding-left: 0;\" @click=\"chooseIcons\"/>\n                                </el-input>\n                            </el-form-item>\n                            <el-form-item v-show=\"resource.type === 0 \" :label=\"$t('table.resource.path')\" prop=\"path\">\n                                <el-input v-model=\"resource.path\"/>\n                            </el-form-item>\n                            <el-form-item v-show=\"resource.type === 0\" :label=\"$t('table.resource.component')\" prop=\"component\">\n                                <el-input v-model=\"resource.component\"/>\n                            </el-form-item>\n                            <el-form-item :label=\"$t('table.resource.permission')\" prop=\"permission\">\n                                <el-input v-model=\"resource.permission\"/>\n                            </el-form-item>\n                            <el-form-item v-show=\"resource.type === 0\" :label=\"$t('table.resource.orderNum')\" prop=\"orderNum\">\n                                <el-input-number v-model=\"resource.orderNum\" :min=\"0\" :max=\"100\" @change=\"handleNumChange\"/>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </el-card>\n                <el-card class=\"box-card\" style=\"margin-top: -2rem;\">\n                    <el-row>\n                        <el-col :span=\"24\" style=\"text-align: right\">\n                            <el-button type=\"primary\" plain :loading=\"buttonLoading\" @click=\"submit\">{{ resource.resourceId === '' ?\n                                this.$t('common.add') :\n                                this.$t('common.edit') }}\n                            </el-button>\n                        </el-col>\n                    </el-row>\n                </el-card>\n            </el-col>\n        </el-row>\n        <Icons\n                :dialog-visible=\"iconVisible\"\n                @close=\"iconVisible = false\"\n                @choose=\"chooseIcon\"\n        />\n    </div>\n</template>\n<script>\n    import Icons from './Icons'\n    import Treeselect from '@riophae/vue-treeselect'\n    import '@riophae/vue-treeselect/dist/vue-treeselect.css'\n\n    export default {\n        name: 'resourceManage',\n        components: {Icons, Treeselect},\n        data() {\n            return {\n                iconVisible: false,\n                buttonLoading: false,\n                selection: [],\n                resourceTree: [],\n                resourceName: '',\n                resource: this.initResource(),\n                treeProps: {\n                    label: 'name',\n                    children: 'children',\n                },\n                treeSelectNormalizer(node) {\n                    if (node.children == null || node.children.length < 1) {\n                        delete node.children\n                    }\n                    return {\n                        label: node.name\n                    }\n                },\n                rules: {\n                    resourceName: [\n                        {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                        {min: 2, max: 10, message: this.$t('rules.range2to10'), trigger: 'blur'}\n                    ],\n                    path: {max: 100, message: this.$t('rules.noMoreThan100'), trigger: 'blur'},\n                    component: {max: 100, message: this.$t('rules.noMoreThan100'), trigger: 'blur'},\n                    permission: {max: 50, message: this.$t('rules.noMoreThan50'), trigger: 'blur'}\n                }\n            }\n        },\n        mounted() {\n            this.initResourceTree()\n        },\n        methods: {\n            initResourceTree() {\n                this.$get('upms/resource/getResourceTree').then((r) => {\n                    this.resourceTree = r.data;\n                })\n            },\n            initResource() {\n                return {\n                    resourceId: '',\n                    resourceName: '',\n                    parentId: null,\n                    path: '',\n                    component: '',\n                    permission: '',\n                    type: 0,\n                    orderNum: 0,\n                    icon: ''\n                }\n            },\n            exportExcel() {\n                this.$download('upms/resource/excel', {\n                    resourceName: this.resourceName\n                }, `resource_${new Date().getTime()}.xlsx`)\n            },\n            filterNode(value, data) {\n                if (!value) return true;\n                return data.name.indexOf(value) !== -1\n            },\n            nodeClick(data, node, v) {\n                this.resource.parentId = data.parentId;\n                if (this.resource.parentId === '-1') {\n                    this.resource.parentId = null\n                }\n                data = data.data;\n                this.resource.orderNum = data.orderNum;\n                this.resource.type = data.type;\n                this.resource.permission = data.permission;\n                this.resource.path = data.path;\n                this.resource.component = data.component;\n                this.resource.icon = data.icon;\n                this.resource.resourceName = data.resourceName;\n                this.resource.resourceId = data.resourceId;\n                this.$refs.form.clearValidate()\n            },\n            handleNumChange(val) {\n                this.resource.orderNum = val\n            },\n            chooseIcons() {\n                this.iconVisible = true\n            },\n            chooseIcon(icon) {\n                this.resource.icon = icon;\n                this.iconVisible = false\n            },\n            submit() {\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.buttonLoading = true;\n                        this.resource.createTime = this.resource.modifyTime = null;\n                        if (this.resource.resourceId) {\n                            this.$put('upms/resource/update', {...this.resource}).then(() => {\n                                this.buttonLoading = false;\n                                this.$message({\n                                    message: this.$t('tips.updateSuccess'),\n                                    type: 'success'\n                                });\n                                this.reset()\n                            }).catch(()=>{\n                                this.buttonLoading = false;\n                            });\n                        } else {\n                            this.$post('upms/resource/create', {...this.resource}).then(() => {\n                                this.buttonLoading = false;\n                                this.$message({\n                                    message: this.$t('tips.createSuccess'),\n                                    type: 'success'\n                                });\n                                this.reset()\n                            }).catch(()=>{\n                                this.buttonLoading = false;\n                            });\n                        }\n                    } else {\n                        return false\n                    }\n                })\n            },\n            reset() {\n                this.initResourceTree();\n                this.resourceName = '';\n                this.resetForm()\n            },\n            search() {\n                this.$refs.resourceTree.filter(this.resourceName)\n            },\n            add() {\n                this.resetForm()\n            },\n            deleteResource() {\n                const checked = this.$refs.resourceTree.getCheckedKeys();\n                if (checked.length === 0) {\n                    this.$message({\n                        message: this.$t('tips.noNodeSelected'),\n                        type: 'warning'\n                    })\n                } else {\n                    this.$confirm(this.$t('tips.confirmDeleteNode'), this.$t('common.tips'), {\n                        confirmButtonText: this.$t('common.confirm'),\n                        cancelButtonText: this.$t('common.cancel'),\n                        type: 'warning'\n                    }).then(() => {\n                        this.resource.resourceIds = checked.join(',');\n                        this.$delete(`upms/resource/delete/${this.resource.resourceIds}`).then(() => {\n                            this.$message({\n                                message: this.$t('tips.deleteSuccess'),\n                                type: 'success'\n                            });\n                            this.reset()\n                        })\n                    }).catch(() => {\n                        this.$refs.resourceTree.setCheckedKeys([])\n                    })\n                }\n            },\n            resetForm() {\n                this.$refs.form.clearValidate();\n                this.$refs.form.resetFields();\n                this.resource = this.initResource()\n            }\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .resource {\n        margin: 10px;\n\n        .app-container {\n            margin: 0 0 10px 0 !important;\n        }\n    }\n\n    .el-card.is-always-shadow {\n        box-shadow: none;\n    }\n\n    .el-card {\n        border-radius: 0;\n        border: none;\n\n        .el-card__header {\n            padding: 10px 20px !important;\n            border-bottom: 1px solid #f1f1f1 !important;\n        }\n    }\n</style>\n"],"sourceRoot":"src/views/model/system/menu"}]}