{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/layout/mixin/ResizeHandler.js","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/layout/mixin/ResizeHandler.js","mtime":1578878084635},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779}],"contextDependencies":[],"result":["import store from '@/store/index';\nvar _document = document,\n    body = _document.body;\nvar WIDTH = 992; // refer to Bootstrap's responsive design\n\nexport default {\n  watch: {\n    $route: function $route(route) {\n      if (store.state.setting.device === 'mobile' && store.state.setting.sidebar.opened) {\n        store.commit('setting/closeSidebar', {\n          withoutAnimation: false\n        });\n      }\n    }\n  },\n  beforeMount: function beforeMount() {\n    window.addEventListener('resize', this.$_resizeHandler);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.$_resizeHandler);\n  },\n  mounted: function mounted() {\n    var isMobile = this.$_isMobile();\n\n    if (isMobile) {\n      store.commit('setting/toggleDevice', 'mobile');\n      store.commit('setting/closeSidebar', {\n        withoutAnimation: true\n      });\n    }\n  },\n  methods: {\n    // use $_ for mixins properties\n    // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential\n    $_isMobile: function $_isMobile() {\n      var rect = body.getBoundingClientRect();\n      return rect.width - 1 < WIDTH;\n    },\n    $_resizeHandler: function $_resizeHandler() {\n      if (!document.hidden) {\n        var isMobile = this.$_isMobile();\n        store.commit('setting/toggleDevice', isMobile ? 'mobile' : 'desktop');\n\n        if (isMobile) {\n          store.commit('setting/closeSidebar', {\n            withoutAnimation: true\n          });\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/layout/mixin/ResizeHandler.js"],"names":["store","document","body","WIDTH","watch","$route","route","state","setting","device","sidebar","opened","commit","withoutAnimation","beforeMount","window","addEventListener","$_resizeHandler","beforeDestroy","removeEventListener","mounted","isMobile","$_isMobile","methods","rect","getBoundingClientRect","width","hidden"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;gBAEeC,Q;IAARC,I,aAAAA,I;AACP,IAAMC,KAAK,GAAG,GAAd,C,CAAkB;;AAElB,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MADG,kBACIC,KADJ,EACW;AACV,UAAIN,KAAK,CAACO,KAAN,CAAYC,OAAZ,CAAoBC,MAApB,KAA+B,QAA/B,IAA2CT,KAAK,CAACO,KAAN,CAAYC,OAAZ,CAAoBE,OAApB,CAA4BC,MAA3E,EAAmF;AAC/EX,QAAAA,KAAK,CAACY,MAAN,CAAa,sBAAb,EAAqC;AAACC,UAAAA,gBAAgB,EAAE;AAAnB,SAArC;AACH;AACJ;AALE,GADI;AAQXC,EAAAA,WARW,yBAQG;AACVC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,eAAvC;AACH,GAVU;AAWXC,EAAAA,aAXW,2BAWK;AACZH,IAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,eAA1C;AACH,GAbU;AAcXG,EAAAA,OAdW,qBAcD;AACN,QAAMC,QAAQ,GAAG,KAAKC,UAAL,EAAjB;;AACA,QAAID,QAAJ,EAAc;AACVrB,MAAAA,KAAK,CAACY,MAAN,CAAa,sBAAb,EAAqC,QAArC;AACAZ,MAAAA,KAAK,CAACY,MAAN,CAAa,sBAAb,EAAqC;AAACC,QAAAA,gBAAgB,EAAE;AAAnB,OAArC;AACH;AACJ,GApBU;AAqBXU,EAAAA,OAAO,EAAE;AACL;AACA;AACAD,IAAAA,UAHK,wBAGQ;AACT,UAAME,IAAI,GAAGtB,IAAI,CAACuB,qBAAL,EAAb;AACA,aAAOD,IAAI,CAACE,KAAL,GAAa,CAAb,GAAiBvB,KAAxB;AACH,KANI;AAOLc,IAAAA,eAPK,6BAOa;AACd,UAAI,CAAChB,QAAQ,CAAC0B,MAAd,EAAsB;AAClB,YAAMN,QAAQ,GAAG,KAAKC,UAAL,EAAjB;AACAtB,QAAAA,KAAK,CAACY,MAAN,CAAa,sBAAb,EAAqCS,QAAQ,GAAG,QAAH,GAAc,SAA3D;;AAEA,YAAIA,QAAJ,EAAc;AACVrB,UAAAA,KAAK,CAACY,MAAN,CAAa,sBAAb,EAAqC;AAACC,YAAAA,gBAAgB,EAAE;AAAnB,WAArC;AACH;AACJ;AACJ;AAhBI;AArBE,CAAf","sourcesContent":["import store from '@/store/index'\n\nconst {body} = document\nconst WIDTH = 992 // refer to Bootstrap's responsive design\n\nexport default {\n    watch: {\n        $route(route) {\n            if (store.state.setting.device === 'mobile' && store.state.setting.sidebar.opened) {\n                store.commit('setting/closeSidebar', {withoutAnimation: false})\n            }\n        }\n    },\n    beforeMount() {\n        window.addEventListener('resize', this.$_resizeHandler)\n    },\n    beforeDestroy() {\n        window.removeEventListener('resize', this.$_resizeHandler)\n    },\n    mounted() {\n        const isMobile = this.$_isMobile()\n        if (isMobile) {\n            store.commit('setting/toggleDevice', 'mobile')\n            store.commit('setting/closeSidebar', {withoutAnimation: true})\n        }\n    },\n    methods: {\n        // use $_ for mixins properties\n        // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential\n        $_isMobile() {\n            const rect = body.getBoundingClientRect()\n            return rect.width - 1 < WIDTH\n        },\n        $_resizeHandler() {\n            if (!document.hidden) {\n                const isMobile = this.$_isMobile()\n                store.commit('setting/toggleDevice', isMobile ? 'mobile' : 'desktop')\n\n                if (isMobile) {\n                    store.commit('setting/closeSidebar', {withoutAnimation: true})\n                }\n            }\n        }\n    }\n}\n"]}]}