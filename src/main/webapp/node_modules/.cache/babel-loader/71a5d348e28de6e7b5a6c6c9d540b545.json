{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/generator/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/generator/Index.vue","mtime":1580285849414},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pageMixins from '@/mixins/page';\nimport { getTables, getGeneratorConfig, getDataSourceConfig } from \"./Api\";\nimport { Message } from \"element-ui\";\nimport Config from \"./Config\";\nimport Table from \"./Table\";\nimport Tree from \"./Tree\";\nexport default {\n  name: 'generatorMgr',\n  mixins: [pageMixins],\n  components: {\n    Config: Config,\n    Table: Table,\n    Tree: Tree\n  },\n  data: function data() {\n    return {\n      tableName: '',\n      tableData: [],\n      pageLoading: false,\n      currentPage: 1,\n      // 当前页码\n      total: 20,\n      // 总条数\n      pageSize: 10,\n      // 每页的数据条数\n      dataSourceConfig: '',\n      dataSourceConfigId: ''\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.init();\n    });\n  },\n  methods: {\n    init: function init() {},\n    search: function search() {\n      var _this3 = this;\n\n      if (this.$isEmpty(this.dataSourceConfigId)) {\n        Message({\n          message: '请选择数据源',\n          type: 'warning',\n          duration: 5 * 1000\n        });\n        return;\n      }\n\n      this.pageLoading = true;\n      getTables({\n        \"dataSourceConfigId\": this.dataSourceConfigId\n      }).then(function (res) {\n        _this3.tableData = res.data;\n\n        var list = _this3.tableData.filter(function (item, index) {\n          return item.name.includes(_this3.tableName);\n        });\n\n        _this3.list = list.filter(function (item, index) {\n          return index < _this3.currentPage * _this3.pageSize && index >= _this3.pageSize * (_this3.currentPage - 1);\n        });\n        _this3.total = list.length;\n        _this3.tableData = _this3.list;\n        _this3.pageLoading = false;\n      }).catch(function (err) {\n        _this3.pageLoading = false;\n      });\n    },\n    toConfig: function toConfig() {\n      var _this = this.$refs.config;\n      getGeneratorConfig().then(function (res) {\n        _this.config = res.data;\n        _this.config.cover = _this.config.cover;\n      });\n      _this.dialog = true;\n    },\n    sizeChange: function sizeChange(val) {\n      this.currentPage = 1;\n      this.pageSize = val;\n      this.search();\n    },\n    pageChange: function pageChange(val) {\n      this.currentPage = val;\n      this.search();\n    },\n    queryDataSourceConfig: function () {\n      var _queryDataSourceConfig = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(queryString, cb) {\n        var _this4 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getDataSourceConfig().then(function (res) {\n                  var data = res.data;\n                  data.forEach(function (dataSourceConfig) {\n                    dataSourceConfig.value = dataSourceConfig.name;\n                  });\n                  var result = data ? data.filter(_this4.createFilter(queryString)) : data; // 调用 callback 返回建议列表的数据\n\n                  clearTimeout(_this4.timeout);\n                  _this4.timeout = setTimeout(function () {\n                    cb(result);\n                  }, 1000 * Math.random());\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function queryDataSourceConfig(_x, _x2) {\n        return _queryDataSourceConfig.apply(this, arguments);\n      }\n\n      return queryDataSourceConfig;\n    }(),\n    createFilter: function createFilter(queryString) {\n      return function (dataSourceConfig) {\n        return dataSourceConfig.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(val) {\n      this.dataSourceConfigId = val.id;\n    }\n  }\n};",{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <div class=\"filter-container\">\n\n            <el-autocomplete\n                    clearable\n                    v-model=\"dataSourceConfig\"\n                    :fetch-suggestions=\"queryDataSourceConfig\"\n                    placeholder=\"请选择数据源\"\n                    class=\"filter-item search-item\"\n                    @select=\"handleSelect\"/>\n            <el-input clearable v-model=\"tableName\" placeholder=\"请输入表名\" style=\"width:200px\" class=\"filter-item search-item\" @keyup.enter.native=\"search\"/>\n            <el-button class=\"filter-item\" size=\"mini\" type=\"success\" icon=\"el-icon-search\" @click=\"search\">搜索</el-button>\n            <el-button class=\"filter-item\" size=\"mini\" type=\"warning\" icon=\"el-icon-setting\" @click=\"toConfig\">生成器配置</el-button>\n        </div>\n\n        <el-table\n                border\n                v-loading=\"pageLoading\"\n                :data=\"tableData\"\n                size=\"small\"\n                style=\"width: 100%;\">\n            <el-table-column label=\"序号\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <div>{{ scope.$index + 1 }}</div>\n                </template>\n            </el-table-column>\n\n            <el-table-column :show-overflow-tooltip=\"true\" prop=\"name\" label=\"表名\"/>\n\n            <el-table-column :show-overflow-tooltip=\"true\" prop=\"remarks\" label=\"备注\">\n                <template slot-scope=\"scope\">\n                    <el-popover trigger=\"hover\" placement=\"left\">\n                        <p>{{tableData[scope.$index].remarks}}</p>\n                        <div slot=\"reference\" class=\"name-wrapper\">\n                            <el-input v-model=\"tableData[scope.$index].remarks\" class=\"edit-input\" style=\"width: 300px\"/>\n                        </div>\n                    </el-popover>\n                </template>\n            </el-table-column>\n\n            <el-table-column label=\"操作\" width=\"280px\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <el-row>\n                        <el-col :span=\"12\">\n                            <Table :name=\"scope.row.name\" :remarks=\"scope.row.remarks\" :data-source-config-id=\"dataSourceConfigId\"/>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <Tree :name=\"scope.row.name\" :remarks=\"scope.row.remarks\" :data-source-config-id=\"dataSourceConfigId\"/>\n                        </el-col>\n                    </el-row>\n                </template>\n            </el-table-column>\n\n        </el-table>\n\n        <!--分页组件-->\n        <el-pagination\n                :total=\"total\"\n                style=\"margin-top: 8px;\"\n                layout=\"total, prev, pager, next, sizes\"\n                :current-page=\"currentPage\"\n                :page-size=\"pageSize\"\n                @size-change=\"sizeChange\"\n                @current-change=\"pageChange\">\n        </el-pagination>\n\n        <Config ref=\"config\"/>\n    </div>\n</template>\n\n<script>\n    import pageMixins from '@/mixins/page'\n    import {getTables, getGeneratorConfig, getDataSourceConfig} from './Api'\n    import {Message} from \"element-ui\";\n    import Config from './Config'\n    import Table from \"./Table\";\n    import Tree from \"./Tree\"\n\n\n    export default {\n        name: 'generatorMgr',\n        mixins: [pageMixins],\n        components: {Config, Table, Tree},\n        data() {\n            return {\n                tableName: '',\n                tableData: [],\n                pageLoading: false,\n                currentPage: 1, // 当前页码\n                total: 20, // 总条数\n                pageSize: 10, // 每页的数据条数\n                dataSourceConfig: '',\n                dataSourceConfigId: ''\n            }\n\n        },\n        created() {\n            this.$nextTick(() => {\n                this.init();\n            })\n        },\n        methods: {\n            init() {\n            },\n            search() {\n                if (this.$isEmpty(this.dataSourceConfigId)) {\n                    Message({\n                        message: '请选择数据源',\n                        type: 'warning',\n                        duration: 5 * 1000\n                    });\n                    return;\n                }\n                this.pageLoading = true;\n                getTables({\n                    \"dataSourceConfigId\": this.dataSourceConfigId\n                }).then(res => {\n                    this.tableData = res.data;\n                    let list = this.tableData.filter((item, index) =>\n                        item.name.includes(this.tableName)\n                    );\n                    this.list = list.filter((item, index) =>\n                        index < this.currentPage * this.pageSize && index >= this.pageSize * (this.currentPage - 1)\n                    );\n                    this.total = list.length;\n                    this.tableData = this.list;\n                    this.pageLoading = false;\n                }).catch(err => {\n                    this.pageLoading = false;\n                })\n            },\n            toConfig() {\n                const _this = this.$refs.config;\n                getGeneratorConfig().then(res => {\n                    _this.config = res.data;\n                    _this.config.cover = _this.config.cover\n                });\n                _this.dialog = true\n            },\n            sizeChange(val) {\n                this.currentPage = 1;\n                this.pageSize = val;\n                this.search();\n            },\n            pageChange(val) {\n                this.currentPage = val;\n                this.search();\n            },\n            async queryDataSourceConfig(queryString, cb) {\n                await getDataSourceConfig().then(res => {\n                    let data = res.data;\n                    data.forEach(dataSourceConfig => {\n                        dataSourceConfig.value = dataSourceConfig.name;\n                    });\n                    let result = data ? data.filter(this.createFilter(queryString)) : data;\n                    // 调用 callback 返回建议列表的数据\n                    clearTimeout(this.timeout);\n                    this.timeout = setTimeout(() => {\n                        cb(result);\n                    }, 1000 * Math.random());\n\n                });\n            },\n            createFilter(queryString) {\n                return (dataSourceConfig) => {\n                    return (dataSourceConfig.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n                };\n            },\n            handleSelect(val) {\n                this.dataSourceConfigId = val.id;\n            }\n        }\n\n    }\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/views/model/support/generator"}]}