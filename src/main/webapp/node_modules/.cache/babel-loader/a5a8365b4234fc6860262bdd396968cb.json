{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/dashboard/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/dashboard/index.vue","mtime":1580262706325},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport { parseTime } from '@/utils';\nimport countTo from 'vue-count-to';\nimport resize from '@/components/Charts/mixins/resize';\nexport default {\n  name: 'Dashboard',\n  components: {\n    countTo: countTo\n  },\n  mixins: [resize],\n  data: function data() {\n    return {\n      welcomeMessage: '',\n      todayIp: 0,\n      todayVisit: 0,\n      totalVisit: 0,\n      chart: null\n    };\n  },\n  computed: {\n    user: function user() {\n      return this.$store.state.account.user;\n    },\n    avatar: function avatar() {\n      return require(\"@/assets/avatar/\".concat(this.user.avatar));\n    }\n  },\n  mounted: function mounted() {\n    this.welcomeMessage = this.welcome();\n    this.initIndexData();\n  },\n  methods: {\n    welcome: function welcome() {\n      var date = new Date();\n      var hour = date.getHours();\n      var time = hour < 6 ? this.$t('common.goodMorning') : hour <= 11 ? this.$t('common.goodMorning') : hour <= 13 ? this.$t('common.goodAfternoon') : hour <= 18 ? this.$t('common.goodAfternoon') : this.$t('common.goodEvening');\n      var welcomeArr = [this.$t('common.randomMessage.a'), this.$t('common.randomMessage.b'), this.$t('common.randomMessage.c'), this.$t('common.randomMessage.d'), this.$t('common.randomMessage.e'), this.$t('common.randomMessage.f'), this.$t('common.randomMessage.g'), this.$t('common.randomMessage.h'), this.$t('common.randomMessage.i')];\n      var index = Math.floor(Math.random() * welcomeArr.length);\n      return \"\".concat(time, \", \").concat(this.user.username, \", \").concat(welcomeArr[index]);\n    },\n    initIndexData: function initIndexData() {\n      var _this = this;\n\n      this.$get('upms/user/index').then(function (r) {\n        var data = r.data;\n        _this.todayIp = data.todayIp;\n        _this.totalVisit = data.totalVisitCount;\n        _this.todayVisit = data.todayVisitCount;\n        var tenVisitCount = [];\n        var dateArr = [];\n\n        for (var i = 10; i >= 0; i--) {\n          var time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i), '{m}-{d}');\n          var contain = false;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = data.lastTenVisitCount[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var o = _step.value;\n\n              if (o.days === time) {\n                contain = true;\n                tenVisitCount.push(o.count);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          if (!contain) {\n            tenVisitCount.push(0);\n          }\n\n          dateArr.push(time);\n        }\n\n        var tenUserVisitCount = [];\n\n        for (var _i = 10; _i >= 0; _i--) {\n          var _time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * _i), '{m}-{d}');\n\n          var _contain = false;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = data.lastTenUserVisitCount[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _o = _step2.value;\n\n              if (_o.days === _time) {\n                _contain = true;\n                tenUserVisitCount.push(_o.count);\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          if (!_contain) {\n            tenUserVisitCount.push(0);\n          }\n        }\n\n        _this.chart = echarts.init(document.getElementById('visit-count-chart'));\n        var option = {\n          backgroundColor: '#FFF',\n          title: {\n            text: _this.$t('common.visitTitle') + '\\n',\n            textStyle: {\n              fontSize: 14\n            }\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            data: [_this.$t('common.you'), _this.$t('common.total')],\n            top: '18'\n          },\n          grid: {\n            left: '3%',\n            right: '5%',\n            bottom: '3%',\n            containLabel: true,\n            show: false\n          },\n          toolbox: {\n            feature: {\n              dataView: {\n                show: false,\n                readOnly: false\n              }\n            }\n          },\n          xAxis: {\n            type: 'category',\n            boundaryGap: true,\n            splitLine: {\n              show: false\n            },\n            data: dateArr,\n            axisLine: {\n              lineStyle: {\n                color: '#333'\n              }\n            }\n          },\n          yAxis: [{\n            type: 'value',\n            splitLine: {\n              lineStyle: {\n                type: 'dashed',\n                color: '#DDD'\n              }\n            },\n            axisLine: {\n              show: false,\n              lineStyle: {\n                color: '#333'\n              }\n            },\n            nameTextStyle: {\n              color: '#999'\n            },\n            splitArea: {\n              show: false\n            }\n          }],\n          series: [{\n            name: _this.$t('common.you'),\n            type: 'bar',\n            barWidth: '25%',\n            color: 'rgb(0, 227, 150)',\n            data: tenUserVisitCount\n          }, {\n            name: _this.$t('common.total'),\n            type: 'bar',\n            barWidth: '25%',\n            color: 'rgb(0, 143, 251)',\n            data: tenVisitCount\n          }]\n        };\n\n        _this.chart.setOption(option);\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"main\">\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"24\">\n                <div class=\"app-container user-container\">\n                    <el-row :gutter=\"10\">\n                        <el-col :xs=\"24\" :sm=\"12\">\n                            <div class=\"user-wrapper\">\n                                <div class=\"user-header\">\n                                    <img alt=\"avatar\" :src=\"avatar\">\n                                </div>\n                                <div class=\"user-info\">\n                                    <div class=\"random-message\">\n                                        {{ welcomeMessage }}\n                                    </div>\n                                    <div class=\"user-Department\">\n                                        <span>{{ user.departmentName ? user.departmentName : $t('common.noDepartment') }}</span> | <span>{{ user.roleName ? user.roleName : $t('common.noRole') }}</span>\n                                    </div>\n                                    <div class=\"user-login-info\">\n                                        {{ $t('common.lastLoginTime') }}：<span id=\"last-login-time\">{{ user.lastLoginTime ? user.lastLoginTime : $t('common.firstLogin') }}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </el-col>\n\n                        <el-col :xs=\"24\" :sm=\"12\">\n                            <div class=\"user-visits\">\n                                <el-row style=\"margin-bottom: .7rem\">\n                                    <el-col :span=\"4\" :offset=\"4\">{{ $t('common.todayIp') }}</el-col>\n                                    <el-col :span=\"4\" :offset=\"4\">{{ $t('common.todayVisit') }}</el-col>\n                                    <el-col :span=\"4\" :offset=\"4\">{{ $t('common.TotalVisit') }}</el-col>\n                                </el-row>\n                                <el-row>\n                                    <el-col :span=\"4\" :offset=\"4\" class=\"num\">\n                                        <el-link type=\"primary\">\n                                            <countTo :start-val=\"0\" :end-val=\"todayIp\" :duration=\"3000\" />\n                                        </el-link>\n                                    </el-col>\n                                    <el-col :span=\"4\" :offset=\"4\" class=\"num\">\n                                        <el-link type=\"primary\">\n                                            <countTo :start-val=\"0\" :end-val=\"todayVisit\" :duration=\"3000\" />\n                                        </el-link>\n                                    </el-col>\n                                    <el-col :span=\"4\" :offset=\"4\" class=\"num\">\n                                        <el-link type=\"primary\">\n                                            <countTo :start-val=\"0\" :end-val=\"totalVisit\" :duration=\"3000\" />\n                                        </el-link>\n                                    </el-col>\n                                </el-row>\n                            </div>\n                        </el-col>\n                    </el-row>\n\n                    <el-row :gutter=\"10\">\n                        <el-col :xs=\"24\" :sm=\"12\">\n                            <div class=\"app-container\">\n                                <div id=\"visit-count-chart\" style=\"width: 100%;height: 20rem\" />\n                            </div>\n                        </el-col>\n\n                    </el-row>\n                </div>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n<script>\n\n    import echarts from 'echarts'\n    import { parseTime } from '@/utils'\n    import countTo from 'vue-count-to'\n    import resize from '@/components/Charts/mixins/resize'\n\n    export default {\n        name: 'Dashboard',\n        components: { countTo },\n        mixins: [resize],\n        data(){\n            return{\n                welcomeMessage: '',\n                todayIp: 0,\n                todayVisit: 0,\n                totalVisit: 0,\n                chart: null\n            }\n        },\n        computed:{\n            user(){\n                return this.$store.state.account.user;\n            },\n            avatar() {\n                return require(`@/assets/avatar/${this.user.avatar}`)\n            }\n        },\n        mounted() {\n            this.welcomeMessage = this.welcome();\n            this.initIndexData()\n        },\n        methods: {\n            welcome() {\n                const date = new Date();\n                const hour = date.getHours();\n                const time = hour < 6 ? this.$t('common.goodMorning') : (hour <= 11 ? this.$t('common.goodMorning') : (hour <= 13 ? this.$t('common.goodAfternoon') : (hour <= 18 ? this.$t('common.goodAfternoon') : this.$t('common.goodEvening'))));\n                const welcomeArr = [\n                    this.$t('common.randomMessage.a'),\n                    this.$t('common.randomMessage.b'),\n                    this.$t('common.randomMessage.c'),\n                    this.$t('common.randomMessage.d'),\n                    this.$t('common.randomMessage.e'),\n                    this.$t('common.randomMessage.f'),\n                    this.$t('common.randomMessage.g'),\n                    this.$t('common.randomMessage.h'),\n                    this.$t('common.randomMessage.i')\n                ];\n                const index = Math.floor((Math.random() * welcomeArr.length));\n                return `${time}, ${this.user.username}, ${welcomeArr[index]}`\n            },\n            initIndexData: function() {\n                this.$get('upms/user/index').then((r) => {\n                    const data = r.data;\n                    this.todayIp = data.todayIp;\n                    this.totalVisit = data.totalVisitCount;\n                    this.todayVisit = data.todayVisitCount;\n                    const tenVisitCount = [];\n                    const dateArr = [];\n                    for (let i = 10; i >= 0; i--) {\n                        const time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i), '{m}-{d}');\n                        let contain = false;\n                        for (const o of data.lastTenVisitCount) {\n                            if (o.days === time) {\n                                contain = true;\n                                tenVisitCount.push(o.count)\n                            }\n                        }\n                        if (!contain) {\n                            tenVisitCount.push(0)\n                        }\n                        dateArr.push(time)\n                    }\n                    const tenUserVisitCount = [];\n                    for (let i = 10; i >= 0; i--) {\n                        const time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i), '{m}-{d}');\n                        let contain = false;\n                        for (const o of data.lastTenUserVisitCount) {\n                            if (o.days === time) {\n                                contain = true;\n                                tenUserVisitCount.push(o.count)\n                            }\n                        }\n                        if (!contain) {\n                            tenUserVisitCount.push(0)\n                        }\n                    }\n                    this.chart = echarts.init(document.getElementById('visit-count-chart'));\n                    const option = {\n                        backgroundColor: '#FFF',\n                        title: {\n                            text: this.$t('common.visitTitle') + '\\n',\n                            textStyle: {\n                                fontSize: 14\n                            }\n                        },\n                        tooltip: {\n                            trigger: 'axis',\n                            axisPointer: {\n                                type: 'shadow'\n                            }\n                        },\n                        legend: {\n                            data: [this.$t('common.you'), this.$t('common.total')],\n                            top: '18'\n                        },\n                        grid: {\n                            left: '3%',\n                            right: '5%',\n                            bottom: '3%',\n                            containLabel: true,\n                            show: false\n                        },\n                        toolbox: {\n                            feature: {\n                                dataView: { show: false, readOnly: false }\n                            }\n                        },\n                        xAxis: {\n                            type: 'category',\n                            boundaryGap: true,\n                            splitLine: {\n                                show: false\n                            },\n                            data: dateArr,\n                            axisLine: {\n                                lineStyle: {\n                                    color: '#333'\n                                }\n                            }\n                        },\n                        yAxis: [\n                            {\n                                type: 'value',\n                                splitLine: {\n                                    lineStyle: {\n                                        type: 'dashed',\n                                        color: '#DDD'\n                                    }\n                                },\n                                axisLine: {\n                                    show: false,\n                                    lineStyle: {\n                                        color: '#333'\n                                    }\n                                },\n                                nameTextStyle: {\n                                    color: '#999'\n                                },\n                                splitArea: {\n                                    show: false\n                                }\n                            }],\n                        series: [\n                            {\n                                name: this.$t('common.you'),\n                                type: 'bar',\n                                barWidth: '25%',\n                                color: 'rgb(0, 227, 150)',\n                                data: tenUserVisitCount\n                            },\n                            {\n                                name: this.$t('common.total'),\n                                type: 'bar',\n                                barWidth: '25%',\n                                color: 'rgb(0, 143, 251)',\n                                data: tenVisitCount\n                            }\n                        ]\n                    };\n                    this.chart.setOption(option)\n                })\n            }\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .main {\n        padding: 10px;\n        .app-container {\n            margin: 0 0 10px 0;\n        }\n        .user-container {\n            padding: 15px;\n        }\n        .user-wrapper {\n            width: 100%;\n            display: inline-block;\n            .user-header {\n                display: inline-block;\n                vertical-align: middle;\n                img {\n                    width: 5rem;\n                    margin: .5rem 1rem;\n                    border-radius: 50%\n                }\n            }\n            .user-info {\n                display: inline-block;\n                vertical-align: middle;\n                .random-message {\n                    font-size: 1rem;\n                    margin-bottom: .5rem;\n                }\n                .user-Department, .user-login-info {\n                    color: rgba(0, 0, 0, 0.45);\n                    margin-bottom: .5rem;\n                    font-size: .8rem;\n                    line-height: 1.1rem;\n                }\n            }\n        }\n        .user-visits {\n            text-align: center;\n            padding-right: 2rem;\n            margin-top: 1rem;\n            vertical-align: middle;\n            .num {\n                font-weight: 600;\n            }\n        }\n        .project-wrapper {\n            padding: 0;\n            .project-header {\n                padding: 18px;\n                margin-bottom: 16px;\n            }\n            table {\n                width: 100%;\n                border-collapse: collapse;\n                td {\n                    width: 50%;\n                    border-top: 1px solid #f1f1f1;\n                    border-bottom: 1px solid #f1f1f1;\n                    padding: .6rem;\n                    .project-avatar-wrapper {\n                        display:inline-block;\n                        float:left;\n                        margin-right:.7rem;\n                        .project-avatar {\n                            color: #42b983;\n                            background-color: #d6f8b8;\n                        }\n                    }\n                    &:nth-child(odd) {\n                        border-right: 1px solid #f1f1f1;\n                    }\n                }\n            }\n            .project-detail {\n                display:inline-block;\n                float:left;\n                text-align:left;\n                width: 75%;\n                .project-name {\n                    font-size:.9rem;\n                    margin-top:-2px;\n                    font-weight:600;\n                }\n                .project-desc {\n                    color:rgba(0, 0, 0, 0.45);\n                    p {\n                        margin: 5px 0 0 0;\n                        font-size: .7rem;\n                        line-height: 1.3rem;\n                        white-space:normal;\n                    }\n                }\n            }\n        }\n        @media screen and (max-width: 1366px)\n        {\n            .user-info {\n                max-width: 25rem;\n            }\n        }\n        @media screen and (max-width: 1300px)\n        {\n            .user-info {\n                max-width: 19rem;\n            }\n        }\n\n        @media screen and (max-width: 1120px)\n        {\n            .user-info {\n                max-width: 17rem;\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/views/dashboard"}]}