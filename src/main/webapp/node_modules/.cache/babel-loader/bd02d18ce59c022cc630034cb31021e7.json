{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/dict/DictData.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/dict/DictData.vue","mtime":1580730278894},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport page from '@/mixins/page';\nimport { saveDictData, editDictData, delDictData } from \"./Api\";\nexport default {\n  mixins: [page],\n  created: function created() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.init();\n    });\n  },\n  data: function data() {\n    return {\n      dialog: false,\n      isAdd: true,\n      form: {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入字典名称',\n          trigger: 'blur'\n        }],\n        value: [{\n          required: true,\n          message: '请输入字典值',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入字典排序',\n          trigger: 'blur'\n        }]\n      },\n      submitLoading: false,\n      delLoading: false,\n      dictName: '',\n      dictId: ''\n    };\n  },\n  methods: {\n    init: function init() {\n      this.pageInfo.current = 1;\n      this.page();\n    },\n    pageInit: function pageInit() {\n      if (this.isNotEmpty(this.dictId)) {\n        this.pageUrl = '/back/dictData/page';\n        this.pageInfo.params.dictId = this.dictId;\n        return true;\n      }\n    },\n    subDelete: function subDelete(id) {\n      var _this2 = this;\n\n      this.delLoading = true;\n      delDictData(id).then(function (res) {\n        _this2.$message({\n          message: '删除成功!',\n          type: 'success'\n        });\n\n        _this2.delLoading = false;\n\n        _this2.$refs[id].doClose();\n\n        _this2.page();\n      }).catch(function (err) {\n        _this2.delLoading = false;\n\n        _this2.$refs[id].doClose();\n      });\n    },\n    doEdit: function doEdit(row) {\n      this.dialog = true;\n      this.isAdd = false;\n      this.form.dictId = this.dictId;\n      this.form = this.copyObj(row);\n    },\n    doAdd: function doAdd() {\n      this.isAdd = true;\n      this.dialog = true;\n      this.form.dictId = this.dictId;\n    },\n    cancel: function cancel() {\n      this.resetForm();\n    },\n    doSubmit: function doSubmit() {\n      var _this3 = this;\n\n      this.submitLoading = true;\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this3.isAdd) {\n            //新增\n            saveDictData(_this3.form).then(function (res) {\n              _this3.$message({\n                message: '新增成功!',\n                type: 'success'\n              });\n\n              _this3.submitLoading = false;\n\n              _this3.cancel();\n\n              _this3.init();\n            }).catch(function (err) {\n              _this3.submitLoading = false;\n            });\n          } else {\n            //编辑\n            editDictData(_this3.form).then(function (res) {\n              _this3.$message({\n                message: '编辑成功!',\n                type: 'success'\n              });\n\n              _this3.submitLoading = false;\n\n              _this3.cancel();\n\n              _this3.init();\n            }).catch(function (err) {\n              _this3.submitLoading = false;\n            });\n          }\n        } else {\n          _this3.submitLoading = false;\n        }\n      });\n    },\n    resetForm: function resetForm() {\n      this.dialog = false;\n      this.form = {};\n      this.$refs['form'].resetFields();\n    }\n  }\n};",{"version":3,"sources":["DictData.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n            <span>字典详情</span>\n            <el-button\n                    class=\"filter-item\"\n                    size=\"mini\"\n                    style=\"float: right;padding: 4px 10px\"\n                    type=\"primary\"\n                    icon=\"el-icon-plus\"\n                    @click=\"doAdd\">新增\n            </el-button>\n        </div>\n\n        <div v-if=\"dictName === ''\">\n            <div class=\"my-code\">点击字典查看详情</div>\n        </div>\n        <div v-else>\n            <!--表格渲染-->\n            <el-table v-loading=\"pageLoading\" :data=\"pageInfo.records\" size=\"small\" style=\"width: 100%;\">\n                <el-table-column label=\"所属字典\">\n                    <template slot-scope=\"scope\">\n                        {{ dictName }}\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"name\" label=\"字典名称\"/>\n                <el-table-column prop=\"value\" label=\"字典值\"/>\n                <el-table-column prop=\"sort\" label=\"排序\"/>\n                <el-table-column label=\"操作\" width=\"130px\" align=\"center\">\n                    <template slot-scope=\"scope\">\n\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"doEdit(scope.row)\"/>\n\n                        <el-popover\n                                :ref=\"scope.row.id\"\n                                placement=\"top\"\n                                width=\"180\">\n                            <p>确定删除本条数据吗？</p>\n                            <div style=\"text-align: right; margin: 0\">\n                                <el-button size=\"mini\" type=\"text\" @click=\"$refs[scope.row.id].doClose()\">取消</el-button>\n                                <el-button :loading=\"delLoading\" type=\"primary\" size=\"mini\"\n                                           @click=\"subDelete(scope.row.id)\">确定\n                                </el-button>\n                            </div>\n                            <el-button slot=\"reference\" type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"/>\n                        </el-popover>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <!--分页组件-->\n            <el-pagination\n                    :total=\"pageInfo.total\"\n                    :current-page=\"pageInfo.current\"\n                    style=\"margin-top: 8px;\"\n                    layout=\"total, prev, pager, next, sizes\"\n                    @size-change=\"sizeChange\"\n                    @current-change=\"pageChange\"/>\n        </div>\n\n        <el-dialog :visible.sync=\"dialog\" :title=\"isAdd ? '新增字典' : '编辑字典'\" append-to-body width=\"550px\" @close=\"cancel\">\n            <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" size=\"small\" label-width=\"100px\">\n                <el-form-item label=\"字典名称\" prop=\"name\">\n                    <el-input v-model=\"form.name\" clearable/>\n                </el-form-item>\n\n\n                <el-form-item label=\"字典值\" prop=\"value\">\n                    <el-input v-model=\"form.value\"/>\n                </el-form-item>\n\n                <el-form-item label=\"排序\" prop=\"sort\">\n                    <el-input v-model.number=\"form.sort\"/>\n                </el-form-item>\n\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button type=\"text\" @click=\"cancel\">取消</el-button>\n                <el-button :loading=\"submitLoading\" type=\"primary\" @click=\"doSubmit\">确认</el-button>\n            </div>\n        </el-dialog>\n    </el-card>\n\n</template>\n\n<script>\n    import page from '@/mixins/page'\n    import {saveDictData, editDictData, delDictData} from './Api'\n\n    export default {\n\n        mixins: [page],\n        created() {\n            this.$nextTick(() => {\n                this.init();\n            })\n        },\n        data() {\n            return {\n                dialog: false,\n                isAdd: true,\n                form: {},\n                rules: {\n                    name: [{required: true, message: '请输入字典名称', trigger: 'blur'}],\n                    value: [{required: true, message: '请输入字典值', trigger: 'blur'}],\n                    sort: [{required: true, message: '请输入字典排序', trigger: 'blur'}],\n                },\n                submitLoading: false,\n                delLoading: false,\n                dictName: '',\n                dictId: ''\n            }\n        },\n        methods: {\n            init() {\n                this.pageInfo.current = 1;\n                this.page();\n            },\n            pageInit() {\n                if (this.isNotEmpty(this.dictId)) {\n                    this.pageUrl = '/back/dictData/page'\n                    this.pageInfo.params.dictId = this.dictId;\n                    return true;\n                }\n            },\n            subDelete(id) {\n                this.delLoading = true;\n                delDictData(id).then(res => {\n                    this.$message({\n                        message: '删除成功!',\n                        type: 'success'\n                    });\n                    this.delLoading = false;\n                    this.$refs[id].doClose()\n                    this.page();\n                }).catch(err => {\n                    this.delLoading = false\n                    this.$refs[id].doClose()\n                })\n            },\n            doEdit(row) {\n                this.dialog = true;\n                this.isAdd = false;\n                this.form.dictId = this.dictId;\n                this.form = this.copyObj(row);\n            },\n            doAdd() {\n                this.isAdd = true;\n                this.dialog = true;\n                this.form.dictId = this.dictId;\n            },\n            cancel() {\n                this.resetForm();\n            },\n            doSubmit() {\n\n                this.submitLoading = true;\n                this.$refs['form'].validate((valid) => {\n                    if (valid) {\n                        if (this.isAdd) {\n                            //新增\n                            saveDictData(this.form).then(res => {\n                                this.$message({\n                                    message: '新增成功!',\n                                    type: 'success'\n                                });\n                                this.submitLoading = false;\n                                this.cancel();\n                                this.init();\n                            }).catch(err => {\n                                this.submitLoading = false;\n                            })\n                        } else {\n                            //编辑\n                            editDictData(this.form).then(res => {\n                                this.$message({\n                                    message: '编辑成功!',\n                                    type: 'success'\n                                });\n                                this.submitLoading = false;\n                                this.cancel();\n                                this.init();\n                            }).catch(err => {\n                                this.submitLoading = false;\n                            })\n                        }\n                    } else {\n                        this.submitLoading = false;\n                    }\n                })\n\n            },\n            resetForm() {\n                this.dialog = false;\n                this.form = {};\n                this.$refs['form'].resetFields();\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n    .my-code {\n        padding: 15px;\n        line-height: 20px;\n        border-left: 3px solid #ddd;\n        color: #333;\n        font-family: Courier New;\n        font-size: 12px\n    }\n</style>"],"sourceRoot":"src/views/model/support/dict"}]}