{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/profile/components/Account.vue?vue&type=style&index=0&id=d0c7a258&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/profile/components/Account.vue","mtime":1579772702361},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/css-loader/index.js","mtime":1578533714393},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1578533683571},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/sass-loader/lib/loader.js","mtime":1578533721270},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form {\n    padding: 10px 0 0 0;\n}\n",{"version":3,"sources":["Account.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA","file":"Account.vue","sourceRoot":"src/views/profile/components","sourcesContent":["<template>\n    <el-form ref=\"form\" :model=\"user\" :rules=\"rules\" label-position=\"right\" label-width=\"80px\" class=\"form\">\n        <el-form-item :label=\"$t('table.user.email')\" prop=\"email\">\n            <el-input v-model=\"user.email\"/>\n        </el-form-item>\n        <el-form-item :label=\"$t('table.user.mobile')\" prop=\"mobile\">\n            <el-input v-model=\"user.mobile\"/>\n        </el-form-item>\n        <el-form-item :label=\"$t('table.user.department')\" prop=\"deptId\">\n            <treeselect\n                    v-model=\"user.departmentId\"\n                    :normalizer=\"treeSelectNormalizer\"\n                    :multiple=\"false\"\n                    :options=\"department\"\n                    :clear-value-text=\"$t('common.clear')\"\n                    placeholder=\" \"\n                    @select=\"onSelect\"\n            />\n        </el-form-item>\n        <el-form-item :label=\"$t('table.user.sex')\" prop=\"sex\">\n            <el-select v-model=\"user.sex\" value=\"\" placeholder=\"\">\n                <el-option value=\"0\" :label=\"$t('common.sex.male') \"/>\n                <el-option value=\"1\" :label=\"$t('common.sex.female') \"/>\n                <el-option value=\"2\" :label=\"$t('common.sex.secret') \"/>\n            </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('table.user.desc')\" prop=\"description\">\n            <el-input v-model=\"user.description\" type=\"textarea\" rows=\"3\"/>\n        </el-form-item>\n        <el-form-item>\n            <el-button type=\"primary\" plain :loading=\"buttonLoading\" @click=\"submit\">{{ $t('common.edit') }}</el-button>\n        </el-form-item>\n    </el-form>\n</template>\n\n<script>\n    import {validMobile} from '@/utils/my-validate'\n    import Treeselect from '@riophae/vue-treeselect'\n    import '@riophae/vue-treeselect/dist/vue-treeselect.css'\n\n    export default {\n        components: {Treeselect},\n        props: {\n            user: {\n                type: Object,\n                default: () => {\n                    return {\n                        name: '',\n                        email: ''\n                    }\n                }\n            }\n        },\n        data() {\n            return {\n                department: [],\n                treeSelectNormalizer(node) {\n                    if (node.children == null || node.children.length < 1) {\n                        delete node.children\n                    }\n                    return {\n                        label: node.name\n                    }\n                },\n                buttonLoading: false,\n                deptName: '',\n                change: false,\n                rules: {\n                    email: {type: 'email', message: this.$t('rules.email'), trigger: 'blur'},\n                    mobile: [\n                        {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                        {\n                            validator: (rule, value, callback) => {\n                                if (value !== '' && !validMobile(value)) {\n                                    callback(this.$t('rules.mobile'))\n                                }\n                                if (!this.user.userId) {\n                                    this.$get(`upms/user/checkMobile/${value}`).then((r) => {\n                                        if (!r.data) {\n                                            callback(this.$t('rules.mobileExist'))\n                                        } else {\n                                            callback()\n                                        }\n                                    })\n                                } else {\n                                    callback()\n                                }\n                            }, trigger: 'blur'\n                        }],\n                    sex: {required: true, message: this.$t('rules.require'), trigger: 'change'},\n                    description: {max: 100, message: this.$t('rules.noMoreThan100'), trigger: 'blur'}\n                }\n            }\n        },\n        mounted() {\n            this.initDepartment()\n        },\n        methods: {\n            submit() {\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.buttonLoading = true;\n                        const temp = {...this.user};\n                        temp.lastLoginTime = temp.modifyTime = temp.createTime = null;\n                        this.$put('upms/user/profile', {...temp}).then(() => {\n                            this.buttonLoading = false;\n                            this.$message({\n                                message: this.$t('tips.updateSuccess'),\n                                type: 'success'\n                            });\n                            if (this.change) {\n                                this.user.department = this.department\n                            }\n                            this.$store.commit('account/setUser', this.user)\n                        }).catch(err => {\n                            this.buttonLoading = false\n                        })\n                    } else {\n                        return false\n                    }\n                })\n            },\n            onSelect(a, b) {\n                this.departmentName = a.label;\n                this.change = true\n            },\n            initDepartment() {\n                this.$get('upms/department/tree').then((r) => {\n                    this.department = r.data;\n                }).catch((error) => {\n                    console.error(error);\n                    this.$message({\n                        message: this.$t('tips.getDataFail'),\n                        type: 'error'\n                    })\n                })\n            }\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .form {\n        padding: 10px 0 0 0;\n    }\n</style>\n"]}]}