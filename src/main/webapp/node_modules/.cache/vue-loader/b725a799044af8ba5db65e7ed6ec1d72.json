{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/profile/components/Password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/profile/components/Password.vue","mtime":1579772702362},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      buttonLoading: false,\n      p: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      rules: {\n        oldPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { validator: (rule, value, callback) => {\n            this.$get('upms/user/checkPassword', {\n              password: value\n            }).then((r) => {\n              if (r.data) {\n                callback()\n              } else {\n                callback(this.$t('tips.oldPasswordIncorrect'))\n              }\n            }).catch(() => {\n              callback()\n            })\n          }, trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 6, max: 20, message: this.$t('rules.range6to20'), trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { validator: (rule, value, callback) => {\n            if (this.p.newPassword !== value) {\n              callback(this.$t('tips.notEqual'))\n            } else {\n              callback()\n            }\n          }, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.buttonLoading = true\n          this.$put('upms/user/password', {\n            password: this.p.newPassword\n          }).then(() => {\n            this.buttonLoading = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$refs.form.clearValidate()\n            this.$refs.form.resetFields()\n          })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["Password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Password.vue","sourceRoot":"src/views/profile/components","sourcesContent":["<template>\n  <el-form ref=\"form\" :model=\"p\" :rules=\"rules\" label-position=\"right\" label-width=\"80px\" class=\"form\">\n    <el-form-item :label=\"$t('table.user.oldPassword')\" prop=\"oldPassword\">\n      <el-input v-model=\"p.oldPassword\" type=\"password\" />\n    </el-form-item>\n    <el-form-item :label=\"$t('table.user.newPassword')\" prop=\"newPassword\">\n      <el-input v-model=\"p.newPassword\" type=\"password\" />\n    </el-form-item>\n    <el-form-item :label=\"$t('table.user.confirmPassword')\" prop=\"confirmPassword\">\n      <el-input v-model=\"p.confirmPassword\" type=\"password\" />\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" plain :loading=\"buttonLoading\" @click=\"submit\">{{ $t('common.edit') }}</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      buttonLoading: false,\n      p: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      rules: {\n        oldPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { validator: (rule, value, callback) => {\n            this.$get('upms/user/checkPassword', {\n              password: value\n            }).then((r) => {\n              if (r.data) {\n                callback()\n              } else {\n                callback(this.$t('tips.oldPasswordIncorrect'))\n              }\n            }).catch(() => {\n              callback()\n            })\n          }, trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { min: 6, max: 20, message: this.$t('rules.range6to20'), trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: this.$t('rules.require'), trigger: 'blur' },\n          { validator: (rule, value, callback) => {\n            if (this.p.newPassword !== value) {\n              callback(this.$t('tips.notEqual'))\n            } else {\n              callback()\n            }\n          }, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.buttonLoading = true\n          this.$put('upms/user/password', {\n            password: this.p.newPassword\n          }).then(() => {\n            this.buttonLoading = false\n            this.$message({\n              message: this.$t('tips.updateSuccess'),\n              type: 'success'\n            })\n            this.$refs.form.clearValidate()\n            this.$refs.form.resetFields()\n          })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}