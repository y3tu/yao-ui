{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/dataSourceConfig/Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/dataSourceConfig/Edit.vue","mtime":1579573020635},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name:'dataSourceConfigEdit',\n    props: {\n        dialogVisible: {\n            type: Boolean,\n            default: false\n        },\n        title: {\n            type: String,\n            default: ''\n        }\n    },\n    data(){\n        return{\n            dataSourceConfig:this.initDataSourceConfig(),\n            screenWidth: 0,\n            width: this.initWidth(),\n            buttonLoading:false,\n            rules:{\n                name:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                type:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                driverClass:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                jdbcUrl:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                username:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                password:{required: true, message: this.$t('rules.require'), trigger: 'blur'}\n            },\n\n        }\n    },\n    mounted() {\n        window.onresize = () => {\n            return (() => {\n                this.width = this.initWidth()\n            })()\n        }\n    },\n    computed: {\n        isVisible: {\n            get() {\n                return this.dialogVisible\n            },\n            set() {\n                this.close();\n                this.reset()\n            }\n        }\n    },\n    methods: {\n        initDataSourceConfig(){\n            return {\n                id: '',\n                name: '',\n                type:'',\n                driverClass: '',\n                jdbcUrl: '',\n                username: '',\n                password: ''\n            }\n        },\n        initWidth() {\n            this.screenWidth = document.body.clientWidth;\n            if (this.screenWidth < 991) {\n                return '90%'\n            } else if (this.screenWidth < 1400) {\n                return '45%'\n            } else {\n                return '800px'\n            }\n        },\n        setDataSourceConfig(val) {\n            this.dataSourceConfig = {...val}\n        },\n        close() {\n            this.$emit('close')\n        },\n        reset() {\n            this.$refs.form.clearValidate();\n            this.$refs.form.resetFields();\n            this.dataSourceConfig=this.initDataSourceConfig();\n        },\n        submitForm(){\n            this.$refs.form.validate((valid) => {\n                if (valid) {\n                    this.buttonLoading = true;\n                    if (!this.dataSourceConfig.id) {\n                        // create\n                        this.$post('support/common/dataSourceConfig/create', {...this.dataSourceConfig}).then(() => {\n                            this.buttonLoading = false;\n                            this.isVisible = false;\n                            this.$message({\n                                message: this.$t('tips.createSuccess'),\n                                type: 'success'\n                            });\n                            this.$emit('success')\n                        }).catch(() => {\n                            this.buttonLoading = false;\n                        });\n                    }else {\n                        // update\n                        this.dataSourceConfig.createTime = this.dataSourceConfig.modifyTime  = null;\n                        this.$put('support/common/dataSourceConfig/update', {...this.dataSourceConfig}).then(() => {\n                            this.buttonLoading = false;\n                            this.isVisible = false;\n                            this.$message({\n                                message: this.$t('tips.updateSuccess'),\n                                type: 'success'\n                            });\n                            this.$emit('success')\n                        }).catch(() => {\n                            this.buttonLoading = false;\n                        });\n                    }\n                }else {\n                    return false;\n                }\n            })\n        }\n    }\n}\n",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Edit.vue","sourceRoot":"src/views/model/support/dataSourceConfig","sourcesContent":["<template>\n    <el-dialog\n            :title=\"title\"\n            :width=\"width\"\n            top=\"50px\"\n            :close-on-click-modal=\"false\"\n            :close-on-press-escape=\"false\"\n            :visible.sync=\"isVisible\">\n        <el-form ref=\"form\" :model=\"dataSourceConfig\" :rules=\"rules\" label-position=\"right\" label-width=\"120px\">\n            <el-form-item label=\"数据源名称\" prop=\"name\">\n                <el-input v-model=\"dataSourceConfig.name\"/>\n            </el-form-item>\n            <el-form-item label=\"数据源类型\" prop=\"type\">\n                <el-input v-model=\"dataSourceConfig.type\"/>\n            </el-form-item>\n            <el-form-item label=\"驱动\" prop=\"driverClass\">\n                <el-input v-model=\"dataSourceConfig.driverClass\"/>\n            </el-form-item>\n            <el-form-item label=\"数据源连接Url\" prop=\"jdbcUrl\">\n                <el-input v-model=\"dataSourceConfig.jdbcUrl\" />\n            </el-form-item>\n            <el-form-item label=\"登录用户名\" prop=\"username\">\n                <el-input v-model=\"dataSourceConfig.username\"/>\n            </el-form-item>\n            <el-form-item label=\"登录密码\" prop=\"password\">\n                <el-input v-model=\"dataSourceConfig.password\"/>\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button type=\"warning\" plain :loading=\"buttonLoading\" @click=\"isVisible = false\">\n                {{ $t('common.cancel') }}\n            </el-button>\n            <el-button type=\"primary\" plain :loading=\"buttonLoading\" @click=\"submitForm\">\n                {{ $t('common.confirm') }}\n            </el-button>\n        </div>\n    </el-dialog>\n</template>\n\n<script>\n    export default {\n        name:'dataSourceConfigEdit',\n        props: {\n            dialogVisible: {\n                type: Boolean,\n                default: false\n            },\n            title: {\n                type: String,\n                default: ''\n            }\n        },\n        data(){\n            return{\n                dataSourceConfig:this.initDataSourceConfig(),\n                screenWidth: 0,\n                width: this.initWidth(),\n                buttonLoading:false,\n                rules:{\n                    name:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                    type:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                    driverClass:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                    jdbcUrl:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                    username:{required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                    password:{required: true, message: this.$t('rules.require'), trigger: 'blur'}\n                },\n\n            }\n        },\n        mounted() {\n            window.onresize = () => {\n                return (() => {\n                    this.width = this.initWidth()\n                })()\n            }\n        },\n        computed: {\n            isVisible: {\n                get() {\n                    return this.dialogVisible\n                },\n                set() {\n                    this.close();\n                    this.reset()\n                }\n            }\n        },\n        methods: {\n            initDataSourceConfig(){\n                return {\n                    id: '',\n                    name: '',\n                    type:'',\n                    driverClass: '',\n                    jdbcUrl: '',\n                    username: '',\n                    password: ''\n                }\n            },\n            initWidth() {\n                this.screenWidth = document.body.clientWidth;\n                if (this.screenWidth < 991) {\n                    return '90%'\n                } else if (this.screenWidth < 1400) {\n                    return '45%'\n                } else {\n                    return '800px'\n                }\n            },\n            setDataSourceConfig(val) {\n                this.dataSourceConfig = {...val}\n            },\n            close() {\n                this.$emit('close')\n            },\n            reset() {\n                this.$refs.form.clearValidate();\n                this.$refs.form.resetFields();\n                this.dataSourceConfig=this.initDataSourceConfig();\n            },\n            submitForm(){\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.buttonLoading = true;\n                        if (!this.dataSourceConfig.id) {\n                            // create\n                            this.$post('support/common/dataSourceConfig/create', {...this.dataSourceConfig}).then(() => {\n                                this.buttonLoading = false;\n                                this.isVisible = false;\n                                this.$message({\n                                    message: this.$t('tips.createSuccess'),\n                                    type: 'success'\n                                });\n                                this.$emit('success')\n                            }).catch(() => {\n                                this.buttonLoading = false;\n                            });\n                        }else {\n                            // update\n                            this.dataSourceConfig.createTime = this.dataSourceConfig.modifyTime  = null;\n                            this.$put('support/common/dataSourceConfig/update', {...this.dataSourceConfig}).then(() => {\n                                this.buttonLoading = false;\n                                this.isVisible = false;\n                                this.$message({\n                                    message: this.$t('tips.updateSuccess'),\n                                    type: 'success'\n                                });\n                                this.$emit('success')\n                            }).catch(() => {\n                                this.buttonLoading = false;\n                            });\n                        }\n                    }else {\n                        return false;\n                    }\n                })\n            }\n        }\n    }\n</script>\n\n<style>\n\n</style>"]}]}