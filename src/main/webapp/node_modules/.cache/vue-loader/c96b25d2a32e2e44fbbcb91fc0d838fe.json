{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/dashboard/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/dashboard/index.vue","mtime":1580262706325},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport echarts from 'echarts'\nimport { parseTime } from '@/utils'\nimport countTo from 'vue-count-to'\nimport resize from '@/components/Charts/mixins/resize'\n\nexport default {\n    name: 'Dashboard',\n    components: { countTo },\n    mixins: [resize],\n    data(){\n        return{\n            welcomeMessage: '',\n            todayIp: 0,\n            todayVisit: 0,\n            totalVisit: 0,\n            chart: null\n        }\n    },\n    computed:{\n        user(){\n            return this.$store.state.account.user;\n        },\n        avatar() {\n            return require(`@/assets/avatar/${this.user.avatar}`)\n        }\n    },\n    mounted() {\n        this.welcomeMessage = this.welcome();\n        this.initIndexData()\n    },\n    methods: {\n        welcome() {\n            const date = new Date();\n            const hour = date.getHours();\n            const time = hour < 6 ? this.$t('common.goodMorning') : (hour <= 11 ? this.$t('common.goodMorning') : (hour <= 13 ? this.$t('common.goodAfternoon') : (hour <= 18 ? this.$t('common.goodAfternoon') : this.$t('common.goodEvening'))));\n            const welcomeArr = [\n                this.$t('common.randomMessage.a'),\n                this.$t('common.randomMessage.b'),\n                this.$t('common.randomMessage.c'),\n                this.$t('common.randomMessage.d'),\n                this.$t('common.randomMessage.e'),\n                this.$t('common.randomMessage.f'),\n                this.$t('common.randomMessage.g'),\n                this.$t('common.randomMessage.h'),\n                this.$t('common.randomMessage.i')\n            ];\n            const index = Math.floor((Math.random() * welcomeArr.length));\n            return `${time}, ${this.user.username}, ${welcomeArr[index]}`\n        },\n        initIndexData: function() {\n            this.$get('upms/user/index').then((r) => {\n                const data = r.data;\n                this.todayIp = data.todayIp;\n                this.totalVisit = data.totalVisitCount;\n                this.todayVisit = data.todayVisitCount;\n                const tenVisitCount = [];\n                const dateArr = [];\n                for (let i = 10; i >= 0; i--) {\n                    const time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i), '{m}-{d}');\n                    let contain = false;\n                    for (const o of data.lastTenVisitCount) {\n                        if (o.days === time) {\n                            contain = true;\n                            tenVisitCount.push(o.count)\n                        }\n                    }\n                    if (!contain) {\n                        tenVisitCount.push(0)\n                    }\n                    dateArr.push(time)\n                }\n                const tenUserVisitCount = [];\n                for (let i = 10; i >= 0; i--) {\n                    const time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i), '{m}-{d}');\n                    let contain = false;\n                    for (const o of data.lastTenUserVisitCount) {\n                        if (o.days === time) {\n                            contain = true;\n                            tenUserVisitCount.push(o.count)\n                        }\n                    }\n                    if (!contain) {\n                        tenUserVisitCount.push(0)\n                    }\n                }\n                this.chart = echarts.init(document.getElementById('visit-count-chart'));\n                const option = {\n                    backgroundColor: '#FFF',\n                    title: {\n                        text: this.$t('common.visitTitle') + '\\n',\n                        textStyle: {\n                            fontSize: 14\n                        }\n                    },\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: {\n                            type: 'shadow'\n                        }\n                    },\n                    legend: {\n                        data: [this.$t('common.you'), this.$t('common.total')],\n                        top: '18'\n                    },\n                    grid: {\n                        left: '3%',\n                        right: '5%',\n                        bottom: '3%',\n                        containLabel: true,\n                        show: false\n                    },\n                    toolbox: {\n                        feature: {\n                            dataView: { show: false, readOnly: false }\n                        }\n                    },\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: true,\n                        splitLine: {\n                            show: false\n                        },\n                        data: dateArr,\n                        axisLine: {\n                            lineStyle: {\n                                color: '#333'\n                            }\n                        }\n                    },\n                    yAxis: [\n                        {\n                            type: 'value',\n                            splitLine: {\n                                lineStyle: {\n                                    type: 'dashed',\n                                    color: '#DDD'\n                                }\n                            },\n                            axisLine: {\n                                show: false,\n                                lineStyle: {\n                                    color: '#333'\n                                }\n                            },\n                            nameTextStyle: {\n                                color: '#999'\n                            },\n                            splitArea: {\n                                show: false\n                            }\n                        }],\n                    series: [\n                        {\n                            name: this.$t('common.you'),\n                            type: 'bar',\n                            barWidth: '25%',\n                            color: 'rgb(0, 227, 150)',\n                            data: tenUserVisitCount\n                        },\n                        {\n                            name: this.$t('common.total'),\n                            type: 'bar',\n                            barWidth: '25%',\n                            color: 'rgb(0, 143, 251)',\n                            data: tenVisitCount\n                        }\n                    ]\n                };\n                this.chart.setOption(option)\n            })\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n    <div class=\"main\">\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"24\">\n                <div class=\"app-container user-container\">\n                    <el-row :gutter=\"10\">\n                        <el-col :xs=\"24\" :sm=\"12\">\n                            <div class=\"user-wrapper\">\n                                <div class=\"user-header\">\n                                    <img alt=\"avatar\" :src=\"avatar\">\n                                </div>\n                                <div class=\"user-info\">\n                                    <div class=\"random-message\">\n                                        {{ welcomeMessage }}\n                                    </div>\n                                    <div class=\"user-Department\">\n                                        <span>{{ user.departmentName ? user.departmentName : $t('common.noDepartment') }}</span> | <span>{{ user.roleName ? user.roleName : $t('common.noRole') }}</span>\n                                    </div>\n                                    <div class=\"user-login-info\">\n                                        {{ $t('common.lastLoginTime') }}：<span id=\"last-login-time\">{{ user.lastLoginTime ? user.lastLoginTime : $t('common.firstLogin') }}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </el-col>\n\n                        <el-col :xs=\"24\" :sm=\"12\">\n                            <div class=\"user-visits\">\n                                <el-row style=\"margin-bottom: .7rem\">\n                                    <el-col :span=\"4\" :offset=\"4\">{{ $t('common.todayIp') }}</el-col>\n                                    <el-col :span=\"4\" :offset=\"4\">{{ $t('common.todayVisit') }}</el-col>\n                                    <el-col :span=\"4\" :offset=\"4\">{{ $t('common.TotalVisit') }}</el-col>\n                                </el-row>\n                                <el-row>\n                                    <el-col :span=\"4\" :offset=\"4\" class=\"num\">\n                                        <el-link type=\"primary\">\n                                            <countTo :start-val=\"0\" :end-val=\"todayIp\" :duration=\"3000\" />\n                                        </el-link>\n                                    </el-col>\n                                    <el-col :span=\"4\" :offset=\"4\" class=\"num\">\n                                        <el-link type=\"primary\">\n                                            <countTo :start-val=\"0\" :end-val=\"todayVisit\" :duration=\"3000\" />\n                                        </el-link>\n                                    </el-col>\n                                    <el-col :span=\"4\" :offset=\"4\" class=\"num\">\n                                        <el-link type=\"primary\">\n                                            <countTo :start-val=\"0\" :end-val=\"totalVisit\" :duration=\"3000\" />\n                                        </el-link>\n                                    </el-col>\n                                </el-row>\n                            </div>\n                        </el-col>\n                    </el-row>\n\n                    <el-row :gutter=\"10\">\n                        <el-col :xs=\"24\" :sm=\"12\">\n                            <div class=\"app-container\">\n                                <div id=\"visit-count-chart\" style=\"width: 100%;height: 20rem\" />\n                            </div>\n                        </el-col>\n\n                    </el-row>\n                </div>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n<script>\n\n    import echarts from 'echarts'\n    import { parseTime } from '@/utils'\n    import countTo from 'vue-count-to'\n    import resize from '@/components/Charts/mixins/resize'\n\n    export default {\n        name: 'Dashboard',\n        components: { countTo },\n        mixins: [resize],\n        data(){\n            return{\n                welcomeMessage: '',\n                todayIp: 0,\n                todayVisit: 0,\n                totalVisit: 0,\n                chart: null\n            }\n        },\n        computed:{\n            user(){\n                return this.$store.state.account.user;\n            },\n            avatar() {\n                return require(`@/assets/avatar/${this.user.avatar}`)\n            }\n        },\n        mounted() {\n            this.welcomeMessage = this.welcome();\n            this.initIndexData()\n        },\n        methods: {\n            welcome() {\n                const date = new Date();\n                const hour = date.getHours();\n                const time = hour < 6 ? this.$t('common.goodMorning') : (hour <= 11 ? this.$t('common.goodMorning') : (hour <= 13 ? this.$t('common.goodAfternoon') : (hour <= 18 ? this.$t('common.goodAfternoon') : this.$t('common.goodEvening'))));\n                const welcomeArr = [\n                    this.$t('common.randomMessage.a'),\n                    this.$t('common.randomMessage.b'),\n                    this.$t('common.randomMessage.c'),\n                    this.$t('common.randomMessage.d'),\n                    this.$t('common.randomMessage.e'),\n                    this.$t('common.randomMessage.f'),\n                    this.$t('common.randomMessage.g'),\n                    this.$t('common.randomMessage.h'),\n                    this.$t('common.randomMessage.i')\n                ];\n                const index = Math.floor((Math.random() * welcomeArr.length));\n                return `${time}, ${this.user.username}, ${welcomeArr[index]}`\n            },\n            initIndexData: function() {\n                this.$get('upms/user/index').then((r) => {\n                    const data = r.data;\n                    this.todayIp = data.todayIp;\n                    this.totalVisit = data.totalVisitCount;\n                    this.todayVisit = data.todayVisitCount;\n                    const tenVisitCount = [];\n                    const dateArr = [];\n                    for (let i = 10; i >= 0; i--) {\n                        const time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i), '{m}-{d}');\n                        let contain = false;\n                        for (const o of data.lastTenVisitCount) {\n                            if (o.days === time) {\n                                contain = true;\n                                tenVisitCount.push(o.count)\n                            }\n                        }\n                        if (!contain) {\n                            tenVisitCount.push(0)\n                        }\n                        dateArr.push(time)\n                    }\n                    const tenUserVisitCount = [];\n                    for (let i = 10; i >= 0; i--) {\n                        const time = parseTime(new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * i), '{m}-{d}');\n                        let contain = false;\n                        for (const o of data.lastTenUserVisitCount) {\n                            if (o.days === time) {\n                                contain = true;\n                                tenUserVisitCount.push(o.count)\n                            }\n                        }\n                        if (!contain) {\n                            tenUserVisitCount.push(0)\n                        }\n                    }\n                    this.chart = echarts.init(document.getElementById('visit-count-chart'));\n                    const option = {\n                        backgroundColor: '#FFF',\n                        title: {\n                            text: this.$t('common.visitTitle') + '\\n',\n                            textStyle: {\n                                fontSize: 14\n                            }\n                        },\n                        tooltip: {\n                            trigger: 'axis',\n                            axisPointer: {\n                                type: 'shadow'\n                            }\n                        },\n                        legend: {\n                            data: [this.$t('common.you'), this.$t('common.total')],\n                            top: '18'\n                        },\n                        grid: {\n                            left: '3%',\n                            right: '5%',\n                            bottom: '3%',\n                            containLabel: true,\n                            show: false\n                        },\n                        toolbox: {\n                            feature: {\n                                dataView: { show: false, readOnly: false }\n                            }\n                        },\n                        xAxis: {\n                            type: 'category',\n                            boundaryGap: true,\n                            splitLine: {\n                                show: false\n                            },\n                            data: dateArr,\n                            axisLine: {\n                                lineStyle: {\n                                    color: '#333'\n                                }\n                            }\n                        },\n                        yAxis: [\n                            {\n                                type: 'value',\n                                splitLine: {\n                                    lineStyle: {\n                                        type: 'dashed',\n                                        color: '#DDD'\n                                    }\n                                },\n                                axisLine: {\n                                    show: false,\n                                    lineStyle: {\n                                        color: '#333'\n                                    }\n                                },\n                                nameTextStyle: {\n                                    color: '#999'\n                                },\n                                splitArea: {\n                                    show: false\n                                }\n                            }],\n                        series: [\n                            {\n                                name: this.$t('common.you'),\n                                type: 'bar',\n                                barWidth: '25%',\n                                color: 'rgb(0, 227, 150)',\n                                data: tenUserVisitCount\n                            },\n                            {\n                                name: this.$t('common.total'),\n                                type: 'bar',\n                                barWidth: '25%',\n                                color: 'rgb(0, 143, 251)',\n                                data: tenVisitCount\n                            }\n                        ]\n                    };\n                    this.chart.setOption(option)\n                })\n            }\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .main {\n        padding: 10px;\n        .app-container {\n            margin: 0 0 10px 0;\n        }\n        .user-container {\n            padding: 15px;\n        }\n        .user-wrapper {\n            width: 100%;\n            display: inline-block;\n            .user-header {\n                display: inline-block;\n                vertical-align: middle;\n                img {\n                    width: 5rem;\n                    margin: .5rem 1rem;\n                    border-radius: 50%\n                }\n            }\n            .user-info {\n                display: inline-block;\n                vertical-align: middle;\n                .random-message {\n                    font-size: 1rem;\n                    margin-bottom: .5rem;\n                }\n                .user-Department, .user-login-info {\n                    color: rgba(0, 0, 0, 0.45);\n                    margin-bottom: .5rem;\n                    font-size: .8rem;\n                    line-height: 1.1rem;\n                }\n            }\n        }\n        .user-visits {\n            text-align: center;\n            padding-right: 2rem;\n            margin-top: 1rem;\n            vertical-align: middle;\n            .num {\n                font-weight: 600;\n            }\n        }\n        .project-wrapper {\n            padding: 0;\n            .project-header {\n                padding: 18px;\n                margin-bottom: 16px;\n            }\n            table {\n                width: 100%;\n                border-collapse: collapse;\n                td {\n                    width: 50%;\n                    border-top: 1px solid #f1f1f1;\n                    border-bottom: 1px solid #f1f1f1;\n                    padding: .6rem;\n                    .project-avatar-wrapper {\n                        display:inline-block;\n                        float:left;\n                        margin-right:.7rem;\n                        .project-avatar {\n                            color: #42b983;\n                            background-color: #d6f8b8;\n                        }\n                    }\n                    &:nth-child(odd) {\n                        border-right: 1px solid #f1f1f1;\n                    }\n                }\n            }\n            .project-detail {\n                display:inline-block;\n                float:left;\n                text-align:left;\n                width: 75%;\n                .project-name {\n                    font-size:.9rem;\n                    margin-top:-2px;\n                    font-weight:600;\n                }\n                .project-desc {\n                    color:rgba(0, 0, 0, 0.45);\n                    p {\n                        margin: 5px 0 0 0;\n                        font-size: .7rem;\n                        line-height: 1.3rem;\n                        white-space:normal;\n                    }\n                }\n            }\n        }\n        @media screen and (max-width: 1366px)\n        {\n            .user-info {\n                max-width: 25rem;\n            }\n        }\n        @media screen and (max-width: 1300px)\n        {\n            .user-info {\n                max-width: 19rem;\n            }\n        }\n\n        @media screen and (max-width: 1120px)\n        {\n            .user-info {\n                max-width: 17rem;\n            }\n        }\n    }\n</style>\n"]}]}