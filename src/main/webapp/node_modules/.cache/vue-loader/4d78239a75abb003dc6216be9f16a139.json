{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/dataSourceConfig/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/dataSourceConfig/Index.vue","mtime":1579573020635},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pageMixins from '@/mixins/page'\nimport Edit from './Edit'\n\nexport default {\n    name: 'dataSourceConfig',\n    mixins: [pageMixins],\n    components: {Edit},\n    data() {\n        return {\n            tableKey: 0,\n            dialog: {\n                isVisible: false,\n                title: ''\n            },\n            selection: []\n        }\n    },\n    created() {\n        this.$nextTick(() => {\n            this.init()\n        })\n    },\n    methods: {\n        init() {\n            this.findPage();\n        },\n        findPageInit() {\n            this.pageUrl = 'support/common/dataSourceConfig/page';\n            return true;\n        },\n        search() {\n            this.findPage();\n        },\n        reset() {\n            this.resetPage();\n            this.search();\n        },\n        create() {\n            this.dialog.title = this.$t('common.add');\n            this.dialog.isVisible = true\n        },\n        singleDelete(row) {\n            this.$refs.table.toggleRowSelection(row, true);\n            this.batchDelete()\n        },\n        batchDelete() {\n            if (!this.selection.length) {\n                this.$message({\n                    message: this.$t('tips.noDataSelected'),\n                    type: 'warning'\n                });\n                return\n            }\n            let contain = false;\n            this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n                confirmButtonText: this.$t('common.confirm'),\n                cancelButtonText: this.$t('common.cancel'),\n                type: 'warning'\n            }).then(() => {\n                const ids = [];\n                this.selection.forEach((data) => {\n                    ids.push(data.id)\n                });\n                this.delete(ids)\n            }).catch(() => {\n                this.clearSelections()\n            })\n        },\n        delete(ids) {\n            this.$delete(`support/common/dataSourceConfig/delete/${ids}`).then(() => {\n                this.$message({\n                    message: this.$t('tips.deleteSuccess'),\n                    type: 'success'\n                });\n                this.search()\n            })\n        },\n        edit(row) {\n            this.$refs.edit.setDataSourceConfig(row);\n            this.dialog.title = this.$t('common.edit');\n            this.dialog.isVisible = true\n        },\n        onSelectChange(selection) {\n            this.selection = selection\n        },\n        editClose() {\n            this.dialog.isVisible = false\n        },\n        editSuccess() {\n            this.search()\n        },\n        //测试连接\n        test(row) {\n            this.$get('support/common/dataSourceConfig/testConnect/' + row.id).then(res => {\n                this.$message({\n                    message: '连接成功！',\n                    type: 'success'\n                });\n            })\n        }\n    }\n\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Index.vue","sourceRoot":"src/views/model/support/dataSourceConfig","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <div class=\"filter-container\">\n            <el-input v-model=\"page.entity.name\" placeholder=\"数据源名称\" class=\"filter-item search-item\"\n                      @keyup.enter.native=\"search\"/>\n            <el-button class=\"filter-item\" type=\"primary\" plain @click=\"search\">\n                {{ $t('table.search') }}\n            </el-button>\n            <el-button class=\"filter-item\" type=\"warning\" plain @click=\"reset\">\n                {{ $t('table.reset') }}\n            </el-button>\n            <el-dropdown v-has-any-permission=\"['user:create','user:delete','user:reset','user:export']\" trigger=\"click\" class=\"filter-item\">\n                <el-button>\n                    {{ $t('table.more') }}<i class=\"el-icon-arrow-down el-icon--right\"/>\n                </el-button>\n                <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item v-has-permission=\"['dataSourceConfig:create']\" @click.native=\"create\">{{ $t('table.add') }}</el-dropdown-item>\n                    <el-dropdown-item v-has-permission=\"['dataSourceConfig:delete']\" @click.native=\"batchDelete\">{{ $t('table.delete') }}</el-dropdown-item>\n                </el-dropdown-menu>\n            </el-dropdown>\n        </div>\n\n        <el-table\n                ref=\"table\"\n                :key=\"tableKey\"\n                v-loading=\"pageLoading\"\n                :data=\"page.records\"\n                style=\"width: 100%;\"\n                @selection-change=\"onSelectChange\"\n                @sort-change=\"sortChange\">\n            <el-table-column type=\"selection\" align=\"center\" width=\"30px\"/>\n            <el-table-column label=\"数据源名称\" prop=\"name\" align=\"center\" min-width=\"120px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.name }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"驱动\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"150px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.driverClass }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"数据库类型\" align=\"center\" min-width=\"60px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.type }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"数据库连接url\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"100px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.jdbcUrl }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"登录用户名\" align=\"center\" min-width=\"100px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.username }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"登录密码\" :show-overflow-tooltip=\"true\" align=\"center\" min-width=\"100px\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.password }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"创建时间\" prop=\"createTime\" align=\"center\" min-width=\"180px\" sortable=\"custom\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.createTime }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"更新时间\" prop=\"modifyTime\" align=\"center\" min-width=\"180px\" sortable=\"custom\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.modifyTime }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('table.operation')\" align=\"center\" min-width=\"150px\" class-name=\"small-padding fixed-width\">\n                <template slot-scope=\"{row}\">\n                    <i v-hasPermission=\"['dataSourceConfig:test']\" class=\"el-icon-connection table-operation\" style=\"color: #87d068;\" @click=\"test(row)\"/>\n                    <i v-hasPermission=\"['dataSourceConfig:update']\" class=\"el-icon-setting table-operation\" style=\"color: #2db7f5;\" @click=\"edit(row)\"/>\n                    <i v-hasPermission=\"['dataSourceConfig:delete']\" class=\"el-icon-delete table-operation\" style=\"color: #f50;\" @click=\"singleDelete(row)\"/>\n                    <el-link v-has-no-permission=\"['user:view','user:update','user:delete']\" class=\"no-perm\">\n                        {{ $t('tips.noPermission') }}\n                    </el-link>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!--分页组件-->\n        <el-pagination\n                :total=\"page.total\"\n                :current-page=\"page.current\"\n                style=\"margin-top: 8px;\"\n                layout=\"total, sizes, prev, pager, next, jumper\"\n                @size-change=\"sizeChange\"\n                @current-change=\"pageChange\"/>\n\n        <edit\n                ref=\"edit\"\n                :dialog-visible=\"dialog.isVisible\"\n                :title=\"dialog.title\"\n                @success=\"editSuccess\"\n                @close=\"editClose\"/>\n    </div>\n</template>\n\n<script>\n    import pageMixins from '@/mixins/page'\n    import Edit from './Edit'\n\n    export default {\n        name: 'dataSourceConfig',\n        mixins: [pageMixins],\n        components: {Edit},\n        data() {\n            return {\n                tableKey: 0,\n                dialog: {\n                    isVisible: false,\n                    title: ''\n                },\n                selection: []\n            }\n        },\n        created() {\n            this.$nextTick(() => {\n                this.init()\n            })\n        },\n        methods: {\n            init() {\n                this.findPage();\n            },\n            findPageInit() {\n                this.pageUrl = 'support/common/dataSourceConfig/page';\n                return true;\n            },\n            search() {\n                this.findPage();\n            },\n            reset() {\n                this.resetPage();\n                this.search();\n            },\n            create() {\n                this.dialog.title = this.$t('common.add');\n                this.dialog.isVisible = true\n            },\n            singleDelete(row) {\n                this.$refs.table.toggleRowSelection(row, true);\n                this.batchDelete()\n            },\n            batchDelete() {\n                if (!this.selection.length) {\n                    this.$message({\n                        message: this.$t('tips.noDataSelected'),\n                        type: 'warning'\n                    });\n                    return\n                }\n                let contain = false;\n                this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n                    confirmButtonText: this.$t('common.confirm'),\n                    cancelButtonText: this.$t('common.cancel'),\n                    type: 'warning'\n                }).then(() => {\n                    const ids = [];\n                    this.selection.forEach((data) => {\n                        ids.push(data.id)\n                    });\n                    this.delete(ids)\n                }).catch(() => {\n                    this.clearSelections()\n                })\n            },\n            delete(ids) {\n                this.$delete(`support/common/dataSourceConfig/delete/${ids}`).then(() => {\n                    this.$message({\n                        message: this.$t('tips.deleteSuccess'),\n                        type: 'success'\n                    });\n                    this.search()\n                })\n            },\n            edit(row) {\n                this.$refs.edit.setDataSourceConfig(row);\n                this.dialog.title = this.$t('common.edit');\n                this.dialog.isVisible = true\n            },\n            onSelectChange(selection) {\n                this.selection = selection\n            },\n            editClose() {\n                this.dialog.isVisible = false\n            },\n            editSuccess() {\n                this.search()\n            },\n            //测试连接\n            test(row) {\n                this.$get('support/common/dataSourceConfig/testConnect/' + row.id).then(res => {\n                    this.$message({\n                        message: '连接成功！',\n                        type: 'success'\n                    });\n                })\n            }\n        }\n\n    }\n</script>\n\n<style>\n\n</style>"]}]}