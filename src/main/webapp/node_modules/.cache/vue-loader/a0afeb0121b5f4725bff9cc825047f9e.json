{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/user/View.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/user/View.vue","mtime":1579413305754},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'UserView',\n    props: {\n        dialogVisible: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            screenWidth: 0,\n            width: this.initWidth(),\n            user: {}\n        }\n    },\n    computed: {\n        isVisible: {\n            get() {\n                return this.dialogVisible\n            },\n            set() {\n                this.close()\n            }\n        },\n        avatar() {\n            if (this.user.avatar) {\n                return require(`@/assets/avatar/${this.user.avatar}`)\n            } else {\n                return require('@/assets/avatar/default.jpg')\n            }\n        }\n    },\n    mounted() {\n        window.onresize = () => {\n            return (() => {\n                this.width = this.initWidth()\n            })()\n        }\n    },\n    methods: {\n        transSex(sex) {\n            switch (sex) {\n                case '0':\n                    return this.$t('common.sex.male')\n                case '1':\n                    return this.$t('common.sex.female')\n                default:\n                    return this.$t('common.sex.secret')\n            }\n        },\n        initWidth() {\n            this.screenWidth = document.body.clientWidth\n            if (this.screenWidth < 550) {\n                return '95%'\n            } else if (this.screenWidth < 990) {\n                return '580px'\n            } else if (this.screenWidth < 1400) {\n                return '600px'\n            } else {\n                return '650px'\n            }\n        },\n        setUser(val) {\n            this.user = {...val}\n        },\n        close() {\n            this.$emit('close')\n        }\n    }\n}\n",{"version":3,"sources":["View.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"View.vue","sourceRoot":"src/views/model/system/user","sourcesContent":["<template>\n    <el-dialog\n            :title=\"$t('common.view')\"\n            :width=\"width\"\n            :visible.sync=\"isVisible\"\n            class=\"user-view\">\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"24\">\n                <div class=\"img-wrapper\">\n                    <img :src=\"avatar\">\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-user\"/> <span>{{ $t('table.user.username') +'：' }}</span> {{ user.username }}\n                </div>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-suitcase\"/> <span>{{ $t('table.user.department') +'：' }}</span> {{ user.departmentName }}\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-trophy\"/> <span>{{ $t('table.user.role') +'：' }}</span> {{ user.roleName }}\n                </div>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-phone-outline\"/> <span>{{ $t('table.user.mobile') +'：' }}</span> {{ user.mobile }}\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-star-off\"/> <span>{{ $t('table.user.sex') +'：' }}</span> {{ transSex(user.sex) }}\n                </div>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-bangzhu\"/> <span>{{ $t('table.user.status') +'：' }}</span> {{ user.status === '1' ? $t('common.status.valid') : $t('common.status.invalid') }}\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-time\"/> <span>{{ $t('table.user.createTime') +'：' }}</span> {{ user.createTime | parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}\n                </div>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-brush\"/> <span>{{ $t('table.user.modifyTime') +'：' }}</span>\n                    {{ user.modifyTime }}\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"24\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-date\"/> <span>{{ $t('table.user.lastLoginTime') +'：' }}</span>\n                    {{ user.lastLoginTime ? user.lastLoginTime: $t('tips.neverLogin') }}\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"24\">\n                <div class=\"view-item\">\n                    <i class=\"el-icon-document\"/> <span>{{ $t('table.user.desc') +'：' }}</span> {{ user.description ? user.description: $t('tips.nothing') }}\n                </div>\n            </el-col>\n        </el-row>\n    </el-dialog>\n</template>\n<script>\n    export default {\n        name: 'UserView',\n        props: {\n            dialogVisible: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data() {\n            return {\n                screenWidth: 0,\n                width: this.initWidth(),\n                user: {}\n            }\n        },\n        computed: {\n            isVisible: {\n                get() {\n                    return this.dialogVisible\n                },\n                set() {\n                    this.close()\n                }\n            },\n            avatar() {\n                if (this.user.avatar) {\n                    return require(`@/assets/avatar/${this.user.avatar}`)\n                } else {\n                    return require('@/assets/avatar/default.jpg')\n                }\n            }\n        },\n        mounted() {\n            window.onresize = () => {\n                return (() => {\n                    this.width = this.initWidth()\n                })()\n            }\n        },\n        methods: {\n            transSex(sex) {\n                switch (sex) {\n                    case '0':\n                        return this.$t('common.sex.male')\n                    case '1':\n                        return this.$t('common.sex.female')\n                    default:\n                        return this.$t('common.sex.secret')\n                }\n            },\n            initWidth() {\n                this.screenWidth = document.body.clientWidth\n                if (this.screenWidth < 550) {\n                    return '95%'\n                } else if (this.screenWidth < 990) {\n                    return '580px'\n                } else if (this.screenWidth < 1400) {\n                    return '600px'\n                } else {\n                    return '650px'\n                }\n            },\n            setUser(val) {\n                this.user = {...val}\n            },\n            close() {\n                this.$emit('close')\n            }\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .user-view {\n        .img-wrapper {\n            text-align: center;\n            margin-top: -1.5rem;\n            margin-bottom: 10px;\n\n            img {\n                width: 4rem;\n                border-radius: 50%;\n            }\n        }\n\n        .view-item {\n            margin: 7px;\n\n            i {\n                font-size: .97rem;\n            }\n\n            span {\n                margin-left: 5px;\n            }\n        }\n    }\n</style>\n"]}]}