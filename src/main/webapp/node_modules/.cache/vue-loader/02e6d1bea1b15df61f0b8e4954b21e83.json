{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/department/Index.vue?vue&type=style&index=0&id=1de27785&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/system/department/Index.vue","mtime":1579413305752},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/css-loader/index.js","mtime":1578533714393},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1578533683571},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/sass-loader/lib/loader.js","mtime":1578533721270},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.Department {\n    margin: 10px;\n\n    .app-container {\n        margin: 0 0 10px 0 !important;\n    }\n}\n\n.el-card.is-always-shadow {\n    box-shadow: none;\n}\n\n.el-card {\n    border-radius: 0;\n    border: none;\n\n    .el-card__header {\n        padding: 10px 20px !important;\n        border-bottom: 1px solid #f1f1f1 !important;\n    }\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/model/system/department","sourcesContent":["<template>\n    <div class=\"Department\">\n        <el-row :gutter=\"10\">\n            <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"app-container\">\n                    <div class=\"filter-container\">\n                        <el-input v-model=\"departmentName\" :placeholder=\"$t('table.department.departmentName')\" class=\"filter-item search-item\"/>\n                        <el-button class=\"filter-item\" type=\"primary\" plain @click=\"search\">\n                            {{ $t('table.search') }}\n                        </el-button>\n                        <el-button class=\"filter-item\" type=\"warning\" plain @click=\"reset\">\n                            {{ $t('table.reset') }}\n                        </el-button>\n                        <el-dropdown v-has-any-permission=\"['department:create','department:delete','department:export']\" trigger=\"click\" class=\"filter-item\">\n                            <el-button>\n                                {{ $t('table.more') }}<i class=\"el-icon-arrow-down el-icon--right\"/>\n                            </el-button>\n                            <el-dropdown-menu slot=\"dropdown\">\n                                <el-dropdown-item v-has-permission=\"['department:create']\" @click.native=\"add\">{{ $t('table.add') }}</el-dropdown-item>\n                                <el-dropdown-item v-has-permission=\"['department:delete']\" @click.native=\"deleteDepartment\">{{ $t('table.delete') }}</el-dropdown-item>\n                                <el-dropdown-item v-has-permission=\"['department:export']\" @click.native=\"exportExcel\">{{ $t('table.export') }}</el-dropdown-item>\n                            </el-dropdown-menu>\n                        </el-dropdown>\n                    </div>\n                    <el-tree\n                            ref=\"departmentTree\"\n                            :props=\"treeProps\"\n                            :data=\"departmentTree\"\n                            :check-strictly=\"true\"\n                            show-checkbox\n                            accordion\n                            node-key=\"id\"\n                            highlight-current\n                            :filter-node-method=\"filterNode\"\n                            @node-click=\"nodeClick\"/>\n                </div>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n                <el-card class=\"box-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                        <span>{{ department.departmentId === '' ? this.$t('common.add') : this.$t('common.edit') }}</span>\n                    </div>\n                    <div>\n                        <el-form ref=\"form\" :model=\"department\" :rules=\"rules\" label-position=\"right\" label-width=\"100px\">\n                            <el-form-item :label=\"$t('table.department.parentId')\" prop=\"parentId\">\n                                <tree-select\n                                        v-model=\"department.parentId\"\n                                        :normalizer=\"treeSelectNormalizer\"\n                                        :multiple=\"false\"\n                                        :options=\"departmentTree\"\n                                        :clear-value-text=\"$t('common.clear')\"\n                                        placeholder=\" \"\n                                        style=\"width:100%\"/>\n                            </el-form-item>\n                            <el-form-item :label=\"$t('table.department.departmentName')\" prop=\"departmentName\">\n                                <el-input v-model=\"department.departmentName\"/>\n                            </el-form-item>\n                            <el-form-item :label=\"$t('table.department.orderNum')\" prop=\"orderNum\">\n                                <el-input-number v-model=\"department.orderNum\" :min=\"0\" :max=\"100\" @change=\"handleNumChange\"/>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </el-card>\n                <el-card class=\"box-card\" style=\"margin-top: -2rem;\">\n                    <el-row>\n                        <el-col :span=\"24\" style=\"text-align: right\">\n                            <el-button type=\"primary\" plain :loading=\"buttonLoading\" @click=\"submit\">{{ department.departmentId === '' ? this.$t('common.add') : this.$t('common.edit') }}\n                            </el-button>\n                        </el-col>\n                    </el-row>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n<script>\n    import TreeSelect from '@riophae/vue-treeselect'\n    import '@riophae/vue-treeselect/dist/vue-treeselect.css'\n\n    export default {\n        name: 'DepartmentManager',\n        components: {TreeSelect},\n        data() {\n            return {\n                departmentName: '',\n                buttonLoading: false,\n                departmentTree: [],\n                department: this.initDepartment(),\n                treeProps: {\n                    label: 'name',\n                    children: 'children',\n                },\n                treeSelectNormalizer(node) {\n                    if (node.children == null || node.children.length < 1) {\n                        delete node.children\n                    }\n                    return {\n                        label: node.name\n                    }\n                },\n                rules: {\n                    departmentName: [\n                        {required: true, message: this.$t('rules.require'), trigger: 'blur'},\n                        {min: 3, max: 10, message: this.$t('rules.range3to10'), trigger: 'blur'}\n                    ]\n                }\n            }\n        },\n        mounted() {\n            this.initDepartmentTree()\n        },\n        methods: {\n            initDepartment() {\n                return {\n                    departmentId: '',\n                    departmentName: '',\n                    parentId: null,\n                    orderNum: 0\n                }\n            },\n            initDepartmentTree() {\n                this.$get('upms/department/tree').then((r) => {\n                    this.departmentTree = r.data\n                })\n            },\n            exportExcel() {\n            },\n            handleNumChange(val) {\n                this.department.orderNum = val\n            },\n            filterNode(value, data) {\n                if (!value) return true;\n                return data.name.indexOf(value) !== -1\n            },\n            nodeClick(node) {\n                let data = node.data;\n                this.department.parentId = node.parentId;\n                if (this.department.parentId === '0') {\n                    this.department.parentId = null\n                }\n                this.department.orderNum = data.orderNum;\n                this.department.departmentName = data.departmentName;\n                this.department.departmentId = data.departmentId;\n                this.$refs.form.clearValidate()\n            },\n            add() {\n                this.resetForm()\n            },\n            deleteDepartment() {\n                const checked = this.$refs.departmentTree.getCheckedKeys();\n                if (checked.length === 0) {\n                    this.$message({\n                        message: this.$t('tips.noNodeSelected'),\n                        type: 'warning'\n                    })\n                } else {\n                    this.$confirm(this.$t('tips.confirmDeleteNode'), this.$t('common.tips'), {\n                        confirmButtonText: this.$t('common.confirm'),\n                        cancelButtonText: this.$t('common.cancel'),\n                        type: 'warning'\n                    }).then(() => {\n                        this.department.departmentIds = checked.join(',');\n                        this.$delete(`upms/department/delByIds/${this.department.departmentIds}`).then(() => {\n                            this.$message({\n                                message: this.$t('tips.deleteSuccess'),\n                                type: 'success'\n                            });\n                            this.reset()\n                        })\n                    }).catch(() => {\n                        this.$refs.departmentTree.setCheckedKeys([])\n                    })\n                }\n            },\n            search() {\n                this.$refs.departmentTree.filter(this.departmentName)\n            },\n            reset() {\n                this.initDepartmentTree();\n                this.departmentName = '';\n                this.resetForm()\n            },\n            submit() {\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.buttonLoading = true;\n                        this.department.createTime = this.department.modifyTime = null;\n                        if (this.department.departmentId) {\n                            this.$put('upms/department/update', {...this.department}).then(() => {\n                                this.buttonLoading = false;\n                                this.$message({\n                                    message: this.$t('tips.updateSuccess'),\n                                    type: 'success'\n                                });\n                                this.reset()\n                            }).catch(()=>{\n                                this.buttonLoading = false;\n                            });\n                        } else {\n                            this.$post('upms/department/create', {...this.department}).then(() => {\n                                this.buttonLoading = false;\n                                this.$message({\n                                    message: this.$t('tips.createSuccess'),\n                                    type: 'success'\n                                });\n                                this.reset()\n                            }).catch(()=>{\n                                this.buttonLoading = false;\n                            });\n                        }\n                    } else {\n                        return false\n                    }\n                })\n            },\n            resetForm() {\n                this.$refs.form.clearValidate();\n                this.$refs.form.resetFields();\n                this.department = this.initDepartment()\n            }\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .Department {\n        margin: 10px;\n\n        .app-container {\n            margin: 0 0 10px 0 !important;\n        }\n    }\n\n    .el-card.is-always-shadow {\n        box-shadow: none;\n    }\n\n    .el-card {\n        border-radius: 0;\n        border: none;\n\n        .el-card__header {\n            padding: 10px 20px !important;\n            border-bottom: 1px solid #f1f1f1 !important;\n        }\n    }\n</style>\n<style lang=\"scss\">\n    .vue-treeselect__menu {\n        max-height: 165px !important;\n    }\n</style>\n"]}]}