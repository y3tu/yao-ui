{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/generator/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/generator/Index.vue","mtime":1580285849414},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pageMixins from '@/mixins/page'\nimport {getTables, getGeneratorConfig, getDataSourceConfig} from './Api'\nimport {Message} from \"element-ui\";\nimport Config from './Config'\nimport Table from \"./Table\";\nimport Tree from \"./Tree\"\n\n\nexport default {\n    name: 'generatorMgr',\n    mixins: [pageMixins],\n    components: {Config, Table, Tree},\n    data() {\n        return {\n            tableName: '',\n            tableData: [],\n            pageLoading: false,\n            currentPage: 1, // 当前页码\n            total: 20, // 总条数\n            pageSize: 10, // 每页的数据条数\n            dataSourceConfig: '',\n            dataSourceConfigId: ''\n        }\n\n    },\n    created() {\n        this.$nextTick(() => {\n            this.init();\n        })\n    },\n    methods: {\n        init() {\n        },\n        search() {\n            if (this.$isEmpty(this.dataSourceConfigId)) {\n                Message({\n                    message: '请选择数据源',\n                    type: 'warning',\n                    duration: 5 * 1000\n                });\n                return;\n            }\n            this.pageLoading = true;\n            getTables({\n                \"dataSourceConfigId\": this.dataSourceConfigId\n            }).then(res => {\n                this.tableData = res.data;\n                let list = this.tableData.filter((item, index) =>\n                    item.name.includes(this.tableName)\n                );\n                this.list = list.filter((item, index) =>\n                    index < this.currentPage * this.pageSize && index >= this.pageSize * (this.currentPage - 1)\n                );\n                this.total = list.length;\n                this.tableData = this.list;\n                this.pageLoading = false;\n            }).catch(err => {\n                this.pageLoading = false;\n            })\n        },\n        toConfig() {\n            const _this = this.$refs.config;\n            getGeneratorConfig().then(res => {\n                _this.config = res.data;\n                _this.config.cover = _this.config.cover\n            });\n            _this.dialog = true\n        },\n        sizeChange(val) {\n            this.currentPage = 1;\n            this.pageSize = val;\n            this.search();\n        },\n        pageChange(val) {\n            this.currentPage = val;\n            this.search();\n        },\n        async queryDataSourceConfig(queryString, cb) {\n            await getDataSourceConfig().then(res => {\n                let data = res.data;\n                data.forEach(dataSourceConfig => {\n                    dataSourceConfig.value = dataSourceConfig.name;\n                });\n                let result = data ? data.filter(this.createFilter(queryString)) : data;\n                // 调用 callback 返回建议列表的数据\n                clearTimeout(this.timeout);\n                this.timeout = setTimeout(() => {\n                    cb(result);\n                }, 1000 * Math.random());\n\n            });\n        },\n        createFilter(queryString) {\n            return (dataSourceConfig) => {\n                return (dataSourceConfig.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n            };\n        },\n        handleSelect(val) {\n            this.dataSourceConfigId = val.id;\n        }\n    }\n\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Index.vue","sourceRoot":"src/views/model/support/generator","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <div class=\"filter-container\">\n\n            <el-autocomplete\n                    clearable\n                    v-model=\"dataSourceConfig\"\n                    :fetch-suggestions=\"queryDataSourceConfig\"\n                    placeholder=\"请选择数据源\"\n                    class=\"filter-item search-item\"\n                    @select=\"handleSelect\"/>\n            <el-input clearable v-model=\"tableName\" placeholder=\"请输入表名\" style=\"width:200px\" class=\"filter-item search-item\" @keyup.enter.native=\"search\"/>\n            <el-button class=\"filter-item\" size=\"mini\" type=\"success\" icon=\"el-icon-search\" @click=\"search\">搜索</el-button>\n            <el-button class=\"filter-item\" size=\"mini\" type=\"warning\" icon=\"el-icon-setting\" @click=\"toConfig\">生成器配置</el-button>\n        </div>\n\n        <el-table\n                border\n                v-loading=\"pageLoading\"\n                :data=\"tableData\"\n                size=\"small\"\n                style=\"width: 100%;\">\n            <el-table-column label=\"序号\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <div>{{ scope.$index + 1 }}</div>\n                </template>\n            </el-table-column>\n\n            <el-table-column :show-overflow-tooltip=\"true\" prop=\"name\" label=\"表名\"/>\n\n            <el-table-column :show-overflow-tooltip=\"true\" prop=\"remarks\" label=\"备注\">\n                <template slot-scope=\"scope\">\n                    <el-popover trigger=\"hover\" placement=\"left\">\n                        <p>{{tableData[scope.$index].remarks}}</p>\n                        <div slot=\"reference\" class=\"name-wrapper\">\n                            <el-input v-model=\"tableData[scope.$index].remarks\" class=\"edit-input\" style=\"width: 300px\"/>\n                        </div>\n                    </el-popover>\n                </template>\n            </el-table-column>\n\n            <el-table-column label=\"操作\" width=\"280px\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <el-row>\n                        <el-col :span=\"12\">\n                            <Table :name=\"scope.row.name\" :remarks=\"scope.row.remarks\" :data-source-config-id=\"dataSourceConfigId\"/>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <Tree :name=\"scope.row.name\" :remarks=\"scope.row.remarks\" :data-source-config-id=\"dataSourceConfigId\"/>\n                        </el-col>\n                    </el-row>\n                </template>\n            </el-table-column>\n\n        </el-table>\n\n        <!--分页组件-->\n        <el-pagination\n                :total=\"total\"\n                style=\"margin-top: 8px;\"\n                layout=\"total, prev, pager, next, sizes\"\n                :current-page=\"currentPage\"\n                :page-size=\"pageSize\"\n                @size-change=\"sizeChange\"\n                @current-change=\"pageChange\">\n        </el-pagination>\n\n        <Config ref=\"config\"/>\n    </div>\n</template>\n\n<script>\n    import pageMixins from '@/mixins/page'\n    import {getTables, getGeneratorConfig, getDataSourceConfig} from './Api'\n    import {Message} from \"element-ui\";\n    import Config from './Config'\n    import Table from \"./Table\";\n    import Tree from \"./Tree\"\n\n\n    export default {\n        name: 'generatorMgr',\n        mixins: [pageMixins],\n        components: {Config, Table, Tree},\n        data() {\n            return {\n                tableName: '',\n                tableData: [],\n                pageLoading: false,\n                currentPage: 1, // 当前页码\n                total: 20, // 总条数\n                pageSize: 10, // 每页的数据条数\n                dataSourceConfig: '',\n                dataSourceConfigId: ''\n            }\n\n        },\n        created() {\n            this.$nextTick(() => {\n                this.init();\n            })\n        },\n        methods: {\n            init() {\n            },\n            search() {\n                if (this.$isEmpty(this.dataSourceConfigId)) {\n                    Message({\n                        message: '请选择数据源',\n                        type: 'warning',\n                        duration: 5 * 1000\n                    });\n                    return;\n                }\n                this.pageLoading = true;\n                getTables({\n                    \"dataSourceConfigId\": this.dataSourceConfigId\n                }).then(res => {\n                    this.tableData = res.data;\n                    let list = this.tableData.filter((item, index) =>\n                        item.name.includes(this.tableName)\n                    );\n                    this.list = list.filter((item, index) =>\n                        index < this.currentPage * this.pageSize && index >= this.pageSize * (this.currentPage - 1)\n                    );\n                    this.total = list.length;\n                    this.tableData = this.list;\n                    this.pageLoading = false;\n                }).catch(err => {\n                    this.pageLoading = false;\n                })\n            },\n            toConfig() {\n                const _this = this.$refs.config;\n                getGeneratorConfig().then(res => {\n                    _this.config = res.data;\n                    _this.config.cover = _this.config.cover\n                });\n                _this.dialog = true\n            },\n            sizeChange(val) {\n                this.currentPage = 1;\n                this.pageSize = val;\n                this.search();\n            },\n            pageChange(val) {\n                this.currentPage = val;\n                this.search();\n            },\n            async queryDataSourceConfig(queryString, cb) {\n                await getDataSourceConfig().then(res => {\n                    let data = res.data;\n                    data.forEach(dataSourceConfig => {\n                        dataSourceConfig.value = dataSourceConfig.name;\n                    });\n                    let result = data ? data.filter(this.createFilter(queryString)) : data;\n                    // 调用 callback 返回建议列表的数据\n                    clearTimeout(this.timeout);\n                    this.timeout = setTimeout(() => {\n                        cb(result);\n                    }, 1000 * Math.random());\n\n                });\n            },\n            createFilter(queryString) {\n                return (dataSourceConfig) => {\n                    return (dataSourceConfig.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n                };\n            },\n            handleSelect(val) {\n                this.dataSourceConfigId = val.id;\n            }\n        }\n\n    }\n</script>\n\n<style>\n\n</style>"]}]}