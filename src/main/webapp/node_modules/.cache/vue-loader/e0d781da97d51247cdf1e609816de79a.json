{"remainingRequest":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/generator/Tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/src/views/model/support/generator/Tree.vue","mtime":1580287142382},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/babel-loader/lib/index.js","mtime":1578533613779},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1578533679077},{"path":"/Users/yxy/work/y3tu/yao/yao-ui/src/main/webapp/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1578533683571}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport {getTableColumn, build} from './Api'\n\nexport default {\n    name: 'generatorTree',\n    props: {\n        name: {\n            type: String,\n            required: true\n        },\n        remarks: {\n            type: String,\n            required: true\n        },\n        dataSourceConfigId: {\n            type: String,\n            required: true\n        }\n    },\n    data() {\n        return {\n            dialog: false,\n            loading: false,\n            genLoading: false,\n            data: [],\n            form: {\n                lineNum: ''\n            },\n            isFullScreen: false,\n        }\n    },\n    methods: {\n        to() {\n            this.dialog = true;\n            this.time = 130;\n            this.$nextTick(() => {\n                this.initData();\n            })\n        },\n        initData() {\n            const _this = this;\n            //初始化数据\n            _this.data = [];\n            _this.loading = true;\n            let param = {\n                tableName: _this.name,\n                dataSourceConfigId: _this.dataSourceConfigId\n            };\n            getTableColumn(param).then(res => {\n                let table = res.data;\n                _this.data.push(...table.columns);\n                _this.loading = false;\n            }).catch(err => {\n                this.dialog = false;\n                _this.loading = false;\n            })\n        },\n        toggleFull() {\n            this.isFullScreen = this.isFullScreen !== true;\n        },\n        cancel() {\n            this.dialog = false\n        },\n        handleDelete(index) {\n            this.data.splice(index, 1);\n        },\n        doSubmit() {\n            this.genLoading = true;\n            build(this.data, this.name).then(res => {\n                this.$notify({\n                    title: '生成成功',\n                    type: 'success',\n                    duration: 2500\n                });\n                this.dialog = false;\n                this.genLoading = false\n            }).catch(err => {\n                this.dialog = false;\n                this.genLoading = false;\n                console.log(err.response.data.message)\n            })\n        }\n    }\n}\n",{"version":3,"sources":["Tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tree.vue","sourceRoot":"src/views/model/support/generator","sourcesContent":["<template>\n    <div>\n        <el-button type=\"primary\" size=\"mini\" @click=\"to\">树形结构生成</el-button>\n\n        <el-dialog :visible.sync=\"dialog\" :fullscreen=\"isFullScreen\" title=\"树形结构生成配置\" append-to-body width=\"70%\">\n\n            <div class=\"filter-container\">\n                <el-select v-model=\"form.lineNum\" placeholder=\"表单排列\">\n                    <el-option label=\"一行一列\" value=\"1\"/>\n                    <el-option label=\"一行两列\" value=\"2\"/>\n                    <el-option label=\"一行三列\" value=\"3\"/>\n                    <el-option label=\"一行四列\" value=\"4\"/>\n                </el-select>\n            </div>\n\n            <el-table v-loading=\"loading\" :data=\"data\" size=\"small\" style=\"width: 100%;\">\n                <el-table-column label=\"序号\" width=\"80\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <div>{{ scope.$index + 1 }}</div>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"name\" label=\"字段名称\" width=\"150\"/>\n                <el-table-column prop=\"typeName\" label=\"字段类型\"/>\n                <el-table-column prop=\"comment\" label=\"字段标题\" width=\"150\">\n                    <template slot-scope=\"scope\">\n                        <el-popover trigger=\"hover\" placement=\"left\">\n                            <p>{{data[scope.$index].comment}}</p>\n                            <div slot=\"reference\" class=\"name-wrapper\">\n                                <el-input v-model=\"data[scope.$index].comment\" class=\"edit-input\" style=\"width: 200px\"/>\n                            </div>\n                        </el-popover>\n                    </template>\n                </el-table-column>\n                <el-table-column align=\"center\" prop=\"eidt\" label=\"可添加编辑\">\n                    <template slot-scope=\"scope\">\n                        <el-tooltip :content=\"scope.row.eidt === true ?'可添加编辑':'不可添加编辑'\" placement=\"top\">\n                            <el-switch v-model=\"data[scope.$index].eidt\"/>\n                        </el-tooltip>\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"表单类型\" width=\"140\">\n                    <template slot-scope=\"scope\">\n                        <el-select v-model=\"data[scope.$index].formType\" :disabled=\"!data[scope.$index].eidt\" class=\"edit-input\" clearable placeholder=\"请选择\">\n                            <el-option label=\"文本输入框\" value=\"1\"/>\n                            <el-option label=\"选择下拉框\" value=\"2\"/>\n                            <el-option label=\"日期选择器\" value=\"3\"/>\n                            <el-option label=\"时间选择器\" value=\"4\"/>\n                        </el-select>\n                    </template>\n                </el-table-column>\n                <el-table-column align=\"center\" prop=\"validate\" label=\"表单非空验证\" width=\"95\">\n                    <template slot-scope=\"scope\">\n                        <el-tooltip :content=\"scope.row.validate === true ?'验证':'不验证'\" placement=\"top\">\n                            <el-switch v-model=\"data[scope.$index].validate\" :disabled=\"!data[scope.$index].eidt\"/>\n                        </el-tooltip>\n                    </template>\n                </el-table-column>\n                <el-table-column align=\"center\" prop=\"validate\" label=\"可搜索\" width=\"95\">\n                    <template slot-scope=\"scope\">\n                        <el-tooltip :content=\"scope.row.search=== true ?'可搜索':'不可搜索'\" placement=\"top\">\n                            <el-switch v-model=\"data[scope.$index].search\"/>\n                        </el-tooltip>\n                    </template>\n                </el-table-column>\n                <el-table-column align=\"center\" fixed=\"right\" label=\"操作\" width=\"100\">\n                    <template slot-scope=\"scope\">\n                        <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index)\">删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div slot=\"footer\">\n                <el-button icon=\"el-icon-full-screen\" @click=\"toggleFull\">全屏开/关</el-button>\n                <el-button @click=\"cancel\">取消</el-button>\n                <el-button :loading=\"genLoading\" type=\"primary\" @click=\"doSubmit\">生成</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n\n    import {getTableColumn, build} from './Api'\n\n    export default {\n        name: 'generatorTree',\n        props: {\n            name: {\n                type: String,\n                required: true\n            },\n            remarks: {\n                type: String,\n                required: true\n            },\n            dataSourceConfigId: {\n                type: String,\n                required: true\n            }\n        },\n        data() {\n            return {\n                dialog: false,\n                loading: false,\n                genLoading: false,\n                data: [],\n                form: {\n                    lineNum: ''\n                },\n                isFullScreen: false,\n            }\n        },\n        methods: {\n            to() {\n                this.dialog = true;\n                this.time = 130;\n                this.$nextTick(() => {\n                    this.initData();\n                })\n            },\n            initData() {\n                const _this = this;\n                //初始化数据\n                _this.data = [];\n                _this.loading = true;\n                let param = {\n                    tableName: _this.name,\n                    dataSourceConfigId: _this.dataSourceConfigId\n                };\n                getTableColumn(param).then(res => {\n                    let table = res.data;\n                    _this.data.push(...table.columns);\n                    _this.loading = false;\n                }).catch(err => {\n                    this.dialog = false;\n                    _this.loading = false;\n                })\n            },\n            toggleFull() {\n                this.isFullScreen = this.isFullScreen !== true;\n            },\n            cancel() {\n                this.dialog = false\n            },\n            handleDelete(index) {\n                this.data.splice(index, 1);\n            },\n            doSubmit() {\n                this.genLoading = true;\n                build(this.data, this.name).then(res => {\n                    this.$notify({\n                        title: '生成成功',\n                        type: 'success',\n                        duration: 2500\n                    });\n                    this.dialog = false;\n                    this.genLoading = false\n                }).catch(err => {\n                    this.dialog = false;\n                    this.genLoading = false;\n                    console.log(err.response.data.message)\n                })\n            }\n        }\n    }\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n    .edit-input {\n\n        .el-input__inner {\n            border: none;\n        }\n    }\n</style>"]}]}